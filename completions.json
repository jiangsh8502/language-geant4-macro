{
    "analysis": {
        "compression": {
            "guidance": "Set compression level\nRange of parameters : CompressionLevel>=0 && CompressionLevel<=4",
            "params": [
                {
                    "name": "CompressionLevel",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "plot": {
            "setDimensions": {
                "guidance": "Set the plotter window size (width and height) in pixels.",
                "params": [
                    {
                        "name": "width",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "height",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "setLayout": {
                "guidance": "Set page layout (number of columns and rows per page).\nSuported layouts:\ncolumns = 1 .. 2\nrows    = 1 .. 3 and  >= columns",
                "params": [
                    {
                        "name": "columns",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "rows",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "setStyle": {
                "guidance": "Only one plotting style is available in low resolution:\ninlib_default: PAW style with low resolution fonts",
                "params": [
                    {
                        "name": "Style",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "setActivation": {
            "guidance": "Set activation.\nWhen this option is enabled, only the histograms marked as activated\nare returned, filled or saved on file.\nNo warning is issued when Get or Fill is called on inactive histogram.",
            "params": [
                {
                    "name": "Activation",
                    "omit": "False",
                    "type": "b"
                }
            ]
        },
        "setFileName": {
            "guidance": "Set name for the histograms & ntuple file",
            "params": [
                {
                    "name": "Filename",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setHistoDirName": {
            "guidance": "Set name for the histograms directory",
            "params": [
                {
                    "name": "HistoDirName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setNtupleDirName": {
            "guidance": "Set name for the ntuple directory",
            "params": [
                {
                    "name": "NtupleDirName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set verbose level\nRange of parameters : VerboseLevel>=0 && VerboseLevel<=4",
            "params": [
                {
                    "name": "VerboseLevel",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "control": {
        "add": {
            "guidance": "Define a new alias as the sum of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "alias": {
            "guidance": "Set an alias.\nString can be aliased by this command.\nThe string may contain one or more spaces,\nthe string must be enclosed by double quotes (\").\nTo use an alias, enclose the alias name with\nparenthis \"{\" and \"}\".",
            "params": [
                {
                    "name": "aliasName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "aliasValue",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "cout": {
            "ignoreInitializationCout": {
                "guidance": "Omit cout from threads during initialization, as they should be identical to the masther thread.\nThis command takes effect only if cout destination is screen without buffering.\nThis command does not affect to cerr.",
                "params": [
                    {
                        "default": "1",
                        "name": "IgnoreInit",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "ignoreThreadsExcept": {
                "guidance": "Omit cout from threads except the specified one.\nThis command takes effect only if cout destination is screen without buffering.\nIf specified thread ID is greater than the number of threads,\nno cout is displayed from worker threads. -1 to reset.\nThis command does not affect to cerr.",
                "params": [
                    {
                        "default": "0",
                        "name": "threadID",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "prefixString": {
                "guidance": "Set the prefix string for each cout/cerr line from a thread.",
                "params": [
                    {
                        "default": "G4WT",
                        "name": "prefix",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setCerrFile": {
                "guidance": "Send G4cerr stream to a file dedicated to a thread.\nTo have a display output, use special keyword \"**Screen**\".\nIf append flag is true output is appended to file,\notherwise file output is overwritten.",
                "params": [
                    {
                        "default": "**Screen**",
                        "name": "fileName",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "1",
                        "name": "append",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "setCoutFile": {
                "guidance": "Send G4cout stream to a file dedicated to a thread.\nTo have a display output, use special keyword \"**Screen**\".\nIf append flag is true output is appended to file,\notherwise file output is overwritten.",
                "params": [
                    {
                        "default": "**Screen**",
                        "name": "fileName",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "1",
                        "name": "append",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "useBuffer": {
                "guidance": "Send cout and/or cerr stream to a buffer.\nThe buffered text will be printed at the end of the job\nfor each thread at a time, so that output of each thread is grouped.\nThis command has no effect if output goes to a file.",
                "params": [
                    {
                        "default": "1",
                        "name": "flag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        },
        "createHTML": {
            "guidance": "Generate HTML files for all of sub-directories and commands.\nDirectory path should be given by FULL-PATH.",
            "params": [
                {
                    "default": "/",
                    "name": "dirPath",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "divide": {
            "guidance": "Define a new alias as the division of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "doif": {
            "guidance": "Execute a macro file if the expression is true.\nSyntax : <double> <comp> <double> <UI_command>",
            "params": [
                {
                    "name": "left",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "comp",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "right",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "UI_command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "echo": {
            "guidance": "Display the aliased value.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "execute": {
            "guidance": "Execute a macro file.",
            "params": [
                {
                    "name": "fileName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "foreach": {
            "guidance": "Execute a macro file more than once.\nLoop counter can be used as an aliased variable.\nValues must be separated by a space.",
            "params": [
                {
                    "name": "macroFile",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "counterName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "valueList",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "getEnv": {
            "guidance": "Get a shell environment variable and define it as an alias.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "getVal": {
            "guidance": "Get the current value of the UI command and define it as an alias.\nCommand is ignored if the UI command does not support GetCurrentValue().\nSyntax : <alias_name> <UI_command>",
            "params": [
                {
                    "name": "alias_name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "UI_command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "if": {
            "guidance": "Execute a macro file if the expression is true.\nSyntax : <double> <comp> <double> <macro_file>",
            "params": [
                {
                    "name": "left",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "comp",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "right",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "aliasValue",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "listAlias": {
            "guidance": "List aliases.",
            "params": []
        },
        "loop": {
            "guidance": "Execute a macro file more than once.\nLoop counter can be used as an aliased variable.",
            "params": [
                {
                    "name": "macroFile",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "counterName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "initialValue",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "finalValue",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "1",
                    "name": "stepSize",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "macroPath": {
            "guidance": "Set macro search pathwith colon-separated list.",
            "params": [
                {
                    "name": "path",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "manual": {
            "guidance": "Display all of sub-directories and commands.\nDirectory path should be given by FULL-PATH.",
            "params": [
                {
                    "default": "/",
                    "name": "dirPath",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "maximumStoredHistory": {
            "guidance": "Set maximum number of stored UI commands.",
            "params": [
                {
                    "default": "20",
                    "name": "max",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "multiply": {
            "guidance": "Define a new alias as the multiplification of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "remainder": {
            "guidance": "Define a new alias as the remainder of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "saveHistory": {
            "guidance": "Store command history to a file.\nDefaul file name is G4history.macro.",
            "params": [
                {
                    "default": "G4History.macro",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "shell": {
            "guidance": "Execute a (Unix) SHELL command.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "stopSavingHistory": {
            "guidance": "Stop saving history file.",
            "params": []
        },
        "subtract": {
            "guidance": "Define a new alias as the subtraction of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "suppressAbortion": {
            "guidance": "Suppress the program abortion caused by G4Exception.\nSuppression level = 0 : no suppression\n= 1 : suppress during EventProc state\n= 2 : full suppression, i.e. no abortion by G4Exception\nWhen abortion is suppressed, you will get error messages issued by G4Exception,\nand there is NO guarantee for the correct result after the G4Exception error message.\nRange of parameters : level >= 0 && level <= 2",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "unalias": {
            "guidance": "Remove an alias.",
            "params": [
                {
                    "name": "aliasName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Applied command will also be shown on screen.\nThis command is useful with MACRO file.\n0 : silent\n1 : only the valid commands are shown.\n2 : comment lines are also shown (default).\nRange of parameters : switch >= 0 && switch <=2",
            "params": [
                {
                    "default": "2",
                    "name": "switch",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "cuts": {
        "dump": {
            "guidance": "Dump cuplues in ProductuinCutsTable.",
            "params": []
        },
        "setHighEdge": {
            "guidance": "Set high edge energy value\nRange of parameters : edge >0.0",
            "params": [
                {
                    "default": "100",
                    "name": "edge",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "TeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setLowEdge": {
            "guidance": "Set low edge energy value\nRange of parameters : edge >0.0",
            "params": [
                {
                    "default": "0.99",
                    "name": "edge",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "keV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setMaxCutEnergy": {
            "guidance": "Set maximum of cut energy value\nRange of parameters : cut >0.0",
            "params": [
                {
                    "default": "10",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set the Verbose level of G4ProductionCutsTable.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more info\n2 : Display debug info\nRange of parameters : level >=0 && level <=3",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "event": {
        "abort": {
            "guidance": "Abort current event.",
            "params": []
        },
        "keepCurrentEvent": {
            "guidance": "Store the current event to G4Run object instead of deleting it at the end of event.\nStored event is available through G4Run until the begining of next run.\nGiven the potential large memory size of G4Event and its datamember objects stored in G4Event,\nthe user must be careful and responsible for not to store too many G4Event objects.",
            "params": []
        },
        "verbose": {
            "guidance": "Set Verbose level of event management category.\n0 : Silent\n1 : Stacking information\n2 : More...\nRange of parameters : level>=0",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "geometry": {
        "navigator": {
            "check_mode": {
                "guidance": "Set navigator in -check_mode- state.\nThis will cause extra checks to be applied during\nnavigation. More strict and less tolerant conditions\nare applied. A run-time performance penalty may be\nobserved when the -check_mode- state is activated.\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!",
                "params": [
                    {
                        "default": "0",
                        "name": "checkFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "push_notify": {
                "guidance": "Set navigator verbosity push notifications.\nThis allows to disable/re-enable verbosity in\nnavigation, when tracks may get stuck and require\none artificial push along the direction by the\nnavigator. Notification is active by default.\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!",
                "params": [
                    {
                        "default": "1",
                        "name": "pushFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "reset": {
                "guidance": "Reset navigator and navigation history.\nNOTE: must be called only after kernel has been\ninitialized once through the run manager!",
                "params": []
            },
            "verbose": {
                "guidance": "Set run-time verbosity for the navigator.\n0 : Silent (default)\n1 : Display volume positioning and step lengths\n2 : Display step/safety info on point location\n3 : Display minimal state at -every- step\n4 : Maximum verbosity (very detailed!)\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!\nRange of parameters : level >=0 && level <=4",
                "params": [
                    {
                        "default": "0",
                        "name": "level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "test": {
            "maximum_errors": {
                "guidance": "Set the maximum number of overlap errors to report\nfor each single volume being checked.\nOnce reached the maximum number specified, overlaps\naffecting that volume further than that are simply ignored.",
                "params": [
                    {
                        "default": "1",
                        "name": "maximum_errors",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "recursion_depth": {
                "guidance": "Set the depth in the geometry tree for recursion.\nrecursive_test will then stop after reached the specified depth.\nBy default, recursion will proceed for the whole depth.",
                "params": [
                    {
                        "default": "-1",
                        "name": "recursion_depth",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "recursion_start": {
                "guidance": "Set the initial level in the geometry tree for recursion.\nrecursive_test will then start from the specified level.",
                "params": [
                    {
                        "default": "0",
                        "name": "initial_level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "resolution": {
                "guidance": "Set the number of points on surface to be generated for\nchecking overlaps.",
                "params": [
                    {
                        "default": "10000",
                        "name": "resolution",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "run": {
                "guidance": "Start running the recursive overlap check.\nVolumes are recursively asked to verify for overlaps\nfor points generated on the surface against their\nrespective mother volume and sisters at the same\nlevel, performing for all daughters and daughters of\ndaughters, etc.\nNOTE: it may take a very long time,\ndepending on the geometry complexity !",
                "params": []
            },
            "tolerance": {
                "guidance": "Define tolerance (in mm) by which overlaps reports\nshould be reported. By default, all overlaps are\nreported, i.e. tolerance is set to: 0*mm.",
                "params": [
                    {
                        "default": "taken from the current value",
                        "name": "Tolerance",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbosity": {
                "guidance": "Specify if running in verbosity mode or not.\nBy default verbosity is set to ON (TRUE).",
                "params": [
                    {
                        "default": "1",
                        "name": "verbosity",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        }
    },
    "gps": {
        "List": {
            "guidance": "List available particles.\nInvoke G4ParticleTable.",
            "params": []
        },
        "direction": {
            "guidance": "Set momentum direction.\nDirection needs not to be a unit vector.\nAngular distribution type is set to planar.\nRange of parameters : Px != 0 || Py != 0 || Pz != 0",
            "params": [
                {
                    "name": "Px",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Py",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Pz",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "energy": {
            "guidance": "Set kinetic energy.",
            "params": [
                {
                    "name": "Energy",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "hist": {
            "file": {
                "guidance": "import the arb energy hist in an ASCII file",
                "params": [
                    {
                        "name": "HistFile",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "inter": {
                "guidance": "Sets the interpolation method for arbitrary distribution.",
                "params": [
                    {
                        "default": "Lin",
                        "name": "int",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "point": {
                "guidance": "Allows user to define a histogram\nEnter: Ehi Weight\nRange of parameters : Ehi >= 0. && Weight >= 0.",
                "params": [
                    {
                        "default": "taken from the current value",
                        "name": "Ehi",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "taken from the current value",
                        "name": "Weight",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "taken from the current value",
                        "name": "Junk",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "reset": {
                "guidance": "Reset (clean) the histogram",
                "params": [
                    {
                        "default": "energy",
                        "name": "HistType",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "type": {
                "guidance": "Sets histogram type",
                "params": [
                    {
                        "default": "biasx",
                        "name": "HistType",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "ion": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gps/ion Z A Q E\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nE:(double) Excitation energy (in keV)",
            "params": [
                {
                    "default": "1",
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0.0",
                    "name": "E",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "ionLvl": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gps/ion Z A Q Lvl\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nLvl:(int) Number of metastable state excitation level (0-9)",
            "params": [
                {
                    "default": "1",
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0.0",
                    "name": "Lvl",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "number": {
            "guidance": "Set number of particles to be generated per vertex.\nRange of parameters : N>0",
            "params": [
                {
                    "name": "N",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "particle": {
            "guidance": "Set particle to be generated.\n(geantino is default)\n(ion can be specified for shooting ions)",
            "params": [
                {
                    "default": "geantino",
                    "name": "particleName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "polarization": {
            "guidance": "Set polarization.\nRange of parameters : Px>=-1.&&Px<=1.&&Py>=-1.&&Py<=1.&&Pz>=-1.&&Pz<=1.",
            "params": [
                {
                    "name": "Px",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Py",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Pz",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "pos": {
            "centre": {
                "guidance": "Set centre coordinates of source.",
                "params": [
                    {
                        "name": "X",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Z",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "confine": {
                "guidance": "Confine source to volume (NULL to unset).\nusage: confine VolName",
                "params": [
                    {
                        "default": "NULL",
                        "name": "VolName",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "halfx": {
                "guidance": "Set x half length of source.",
                "params": [
                    {
                        "name": "Halfx",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "halfy": {
                "guidance": "Set y half length of source.",
                "params": [
                    {
                        "name": "Halfy",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "halfz": {
                "guidance": "Set z half length of source.",
                "params": [
                    {
                        "name": "Halfz",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "inner_radius": {
                "guidance": "Set inner radius of source when required.",
                "params": [
                    {
                        "name": "Radius0",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "paralp": {
                "guidance": "Angle from y-axis of y' in Para",
                "params": [
                    {
                        "name": "paralp",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "parphi": {
                "guidance": "Azimuth angle through centres of z faces",
                "params": [
                    {
                        "name": "parphi",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "parthe": {
                "guidance": "Polar angle through centres of z faces",
                "params": [
                    {
                        "name": "parthe",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "radius": {
                "guidance": "Set radius of source.",
                "params": [
                    {
                        "name": "Radius",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "rot1": {
                "guidance": "Set the 1st vector defining the rotation matrix'.\nIt does not need to be a unit vector.\nRange of parameters : R1x != 0 || R1y != 0 || R1z != 0",
                "params": [
                    {
                        "name": "R1x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R1y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R1z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "rot2": {
                "guidance": "Set the 2nd vector defining the rotation matrix'.\nIt does not need to be a unit vector.\nRange of parameters : R2x != 0 || R2y != 0 || R2z != 0",
                "params": [
                    {
                        "name": "R2x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R2y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R2z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "shape": {
                "guidance": "Sets source shape for Plan, Surface or Volume type source.",
                "params": [
                    {
                        "default": "NULL",
                        "name": "Shape",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "sigma_r": {
                "guidance": "Set standard deviation in radial of the beam positional profile\napplicable to Beam type source only",
                "params": [
                    {
                        "name": "Sigmar",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sigma_x": {
                "guidance": "Set standard deviation of beam positional profile in x-dir\napplicable to Beam type source only",
                "params": [
                    {
                        "name": "Sigmax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sigma_y": {
                "guidance": "Set standard deviation of beam positional profile in y-dir\napplicable to Beam type source only",
                "params": [
                    {
                        "name": "Sigmay",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "type": {
                "guidance": "Sets source distribution type.\nEither Point, Beam, Plane, Surface or Volume",
                "params": [
                    {
                        "default": "Point",
                        "name": "DisType",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "position": {
            "guidance": "Set starting position of the particle for a Point like source.\nSame effect as the two /gps/pos/type Point /gps/pos/centre commands.",
            "params": [
                {
                    "name": "X",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Y",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "time": {
            "guidance": "Set initial time of the particle.",
            "params": [
                {
                    "name": "t0",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "ns",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level for GPS\n0 : Silent\n1 : Limited information\n2 : Detailed information\nRange of parameters : level>=0 && level <=2",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "gui": {
        "addButton": {
            "guidance": "Add a button to menu.",
            "params": [
                {
                    "default": "dummy",
                    "name": "Menu",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "dummy",
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "Command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "addIcon": {
            "guidance": "Add a non-checkable icon to the Icon toolbar.\nIf the Icon parameter is set to \"user_icon\", you should provide the icon file in xpm format, otherwise you have to choose one of the candidate icons\nA command given without parameters will display a window that will allow one to choose the parameters (if needed) for this command.\nE.g: /gui/addIcon \"Change background color\" user_icon /vis/viewer/set/background ../Images/background.xpm\nSpecial cases for the Icon parameter:\n- open: Open an open-file-selector that can run the Command with File as argument.\n- save: Open a save-file-selector that can run the Command with File as argument.\n- move/rotate/pick/zoom_in/zoom_out: Theses icons are radio-button icons that can change cursor action.\n- wireframe/solid/hidden_line_removal/hidden_line_and_surface_removal: These icons are radio-button icons that can change drawing style.\n- perspective/ortho: These icons are radio-button icons that can change projection style.",
            "params": [
                {
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "Icon",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "no_command",
                    "name": "Command",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "no_file",
                    "name": "File",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "addMenu": {
            "guidance": "Add a menu to menu bar.",
            "params": [
                {
                    "default": "dummy",
                    "name": "Name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "dummy",
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "system": {
            "guidance": "Send a command to the system.",
            "params": [
                {
                    "name": "Command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "gun": {
        "List": {
            "guidance": "List available particles.\nInvoke G4ParticleTable.",
            "params": []
        },
        "direction": {
            "guidance": "Set momentum direction.\nDirection needs not to be a unit vector.\nRange of parameters : ex != 0 || ey != 0 || ez != 0",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "ex",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "ey",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "ez",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "energy": {
            "guidance": "Set kinetic energy.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "Energy",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "ion": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gun/ion Z A Q\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nE:(double) Excitation energy (in keV)",
            "params": [
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "-1",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "E",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "ionL": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gun/ion Z A Q I\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nI:(int) Level number of metastable state (0 = ground)",
            "params": [
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "-1",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "I",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "momentum": {
            "guidance": "Set momentum. This command is equivalent to two commands /gun/direction and /gun/momentumAmp\nRange of parameters : px != 0 || py != 0 || pz != 0",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "px",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "py",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "pz",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "momentumAmp": {
            "guidance": "Set absolute value of momentum.\nDirection should be set by /gun/direction command.\nThis command should be used alternatively with /gun/energy.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "Momentum",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "number": {
            "guidance": "Set number of particles to be generated.\nRange of parameters : N>0",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "N",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "particle": {
            "guidance": "Set particle to be generated.\n(geantino is default)\n(ion can be specified for shooting ions)",
            "params": [
                {
                    "default": "geantino",
                    "name": "particleName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "polarization": {
            "guidance": "Set polarization.\nRange of parameters : Px>=-1.&&Px<=1.&&Py>=-1.&&Py<=1.&&Pz>=-1.&&Pz<=1.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "Px",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Py",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Pz",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "position": {
            "guidance": "Set starting position of the particle.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "X",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Y",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Z",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "time": {
            "guidance": "Set initial time of the particle.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "t0",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "ns",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        }
    },
    "heptst": {
        "processAbsLevel": {
            "guidance": "Set absolute energy level (with unit) of allowed energy non-conservation",
            "params": [
                {
                    "default": "-1",
                    "name": "ProcessAbsLevel",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "name": "Unit",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "processRelLevel": {
            "guidance": "Set relative level of allowed energy non-conservation",
            "params": [
                {
                    "default": "-1",
                    "name": "ProcessRelLevel",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "reportLevel": {
            "guidance": "Set level of detail reported upon E/p non-conservation\n0 - (default) no reporting\n1 - report only when E/p not conserved\n2 - report regardless of E/p conservation\n3 - report only when E/p not conserved, with names, limits\n4 - report regardless of E/p conservation, with names, limits\nRange of parameters : ReportLevel >= 0 && ReportLevel < 5",
            "params": [
                {
                    "default": "0",
                    "name": "ReportLevel",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "hits": {
        "activate": {
            "guidance": "Activate sensitive detector(s).",
            "params": [
                {
                    "default": "/",
                    "name": "detector",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "inactivate": {
            "guidance": "Inactivate sensitive detector(s).",
            "params": [
                {
                    "default": "/",
                    "name": "detector",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "List sensitive detector tree.",
            "params": []
        },
        "verbose": {
            "guidance": "Set the Verbose level.",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "material": {
        "g4": {
            "printDensityEffParam": {
                "guidance": "print Material from G4DensityEffectData.\nall - all materials",
                "params": [
                    {
                        "default": "all",
                        "name": "dmat",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printElement": {
                "guidance": "print Element from G4ElementTable.\nall - all elements.",
                "params": [
                    {
                        "default": "all",
                        "name": "elm",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printMaterial": {
                "guidance": "print Material from G4MaterialTable.\nall - all materials",
                "params": [
                    {
                        "default": "all",
                        "name": "pmat",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "verbose": {
            "guidance": "Set verbose level.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "particle": {
        "createAllIon": {
            "guidance": "Create All ions (ground state)",
            "params": []
        },
        "createAllIsomer": {
            "guidance": "Create All isomers",
            "params": []
        },
        "find": {
            "guidance": "Find particle by encoding",
            "params": [
                {
                    "default": "0",
                    "name": "encoding",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "list": {
            "guidance": "List name of particles.\nall(default)/lepton/baryon/meson/nucleus/quarks",
            "params": [
                {
                    "default": "all",
                    "name": "particle type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "manage": {
            "nuclideTable": {
                "level_tolerance": {
                    "guidance": "Set tolerance in level seaching.\nUnit of the energy can be :\nMeV, keV, eV (default)\nRange of parameters : lTolerance >0.0",
                    "params": [
                        {
                            "default": "1",
                            "name": "lTolerance",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "eV",
                            "name": "Unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "min_halflife": {
                    "guidance": "Set threshold of half-life.\nUnit of the time can be :\ns, ms, ns (default)\nRange of parameters : life >0.0",
                    "params": [
                        {
                            "default": "1000",
                            "name": "life",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "ns",
                            "name": "Unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                }
            }
        },
        "property": {
            "decay": {
                "br": {
                    "guidance": "Set branching ratio. [0< BR <1.0]\nRange of parameters : (br >=0.0) && (br <=1.0)",
                    "params": [
                        {
                            "name": "br",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "dump": {
                    "guidance": "Dump decay mode information.",
                    "params": []
                },
                "select": {
                    "guidance": "Enter index of decay mode.\nRange of parameters : mode >=0",
                    "params": [
                        {
                            "default": "0",
                            "name": "mode",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                }
            }
        },
        "select": {
            "guidance": "Select particle",
            "params": [
                {
                    "default": "none",
                    "name": "particle name",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level of particle table.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more\nRange of parameters : verbose_level >=0",
            "params": [
                {
                    "default": "0",
                    "name": "verbose_level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "physics_lists": {
        "em": {
            "GammaNuclear": {
                "guidance": "Switching on gamma nuclear physics.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "MuonNuclear": {
                "guidance": "Switching on muon nuclear physics.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "SyncRadiation": {
                "guidance": "Switching on/off synchrotron radiation.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "SyncRadiationAll": {
                "guidance": "Switching on/off synchrotron radiation for all charged.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            }
        }
    },
    "process": {
        "activate": {
            "guidance": "Activate processes\nActivate  name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "dump": {
            "guidance": "Dump process information\ndump name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "em": {
            "AddDNARegion": {
                "guidance": "Activate DNA in the G4Region.\nregName   : G4Region name\ndnaType   : opt0, opt1, opt2",
                "params": [
                    {
                        "name": "regName",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "type",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "AddMicroElecRegion": {
                "guidance": "Activate MicroElec model in the G4Region",
                "params": [
                    {
                        "name": "MicroElec",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "AddPAIRegion": {
                "guidance": "Activate PAI in the G4Region.\npartName  : particle name (default - all)\nregName   : G4Region name\npaiType   : PAI, PAIphoton",
                "params": [
                    {
                        "name": "partName",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "regName",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "type",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "applyCuts": {
                "guidance": "Enable/disable applying cuts for gamma processes",
                "params": [
                    {
                        "default": "0",
                        "name": "apl",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "auger": {
                "guidance": "Enable/disable Auger electrons production",
                "params": [
                    {
                        "default": "0",
                        "name": "augerFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "augerCascade": {
                "guidance": "Enable/disable simulation of cascade of Auger electrons",
                "params": [
                    {
                        "default": "0",
                        "name": "augerCascadeFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "deexcitation": {
                "guidance": "Set deexcitation flags per G4Region.\nregName   : G4Region name\nflagFluo  : Fluorescence\nflagAuger : Auger\nflagPIXE  : PIXE",
                "params": [
                    {
                        "name": "regName",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "flagFluo",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "flagAuger",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "flagPIXE",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "deexcitationIgnoreCut": {
                "guidance": "Enable/Disable usage of cuts in de-excitation module",
                "params": [
                    {
                        "default": "0",
                        "name": "deexcut",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "fluo": {
                "guidance": "Enable/disable atomic deexcitation",
                "params": [
                    {
                        "default": "0",
                        "name": "fluoFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "fluoBearden": {
                "guidance": "Enable/disable usage of Bearden fluorescence files",
                "params": [
                    {
                        "default": "0",
                        "name": "fluoBeardenFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "lowestElectronEnergy": {
                "guidance": "Set the lowest kinetic energy for e+-",
                "params": [
                    {
                        "name": "elow",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "lowestMuHadEnergy": {
                "guidance": "Set the lowest kinetic energy for muons and hadrons",
                "params": [
                    {
                        "name": "elowh",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "pixe": {
                "guidance": "Enable/disable PIXE simulation",
                "params": [
                    {
                        "default": "0",
                        "name": "pixeFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "pixeElecXSmodel": {
                "guidance": "The name of PIXE cross section for electron",
                "params": [
                    {
                        "name": "pixeEXS",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "pixeXSmodel": {
                "guidance": "The name of PIXE cross section",
                "params": [
                    {
                        "name": "pixeXS",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printParameters": {
                "guidance": "Print all EM parameters.",
                "params": []
            },
            "setBiasingFactor": {
                "guidance": "Set factor for the process cross section.\nprocName   : process name\nprocFact   : factor\nflagFact   : flag to change weight",
                "params": [
                    {
                        "name": "procName",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "procFact",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "flagFact",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "setForcedInteraction": {
                "guidance": "Set factor for the process cross section.\nprocNam    : process name\nregNam     : region name\ntlength    : fixed target length\ntflag      : flag to change weight",
                "params": [
                    {
                        "name": "procNam",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "regNam",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "tlength",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "unitT",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "name": "tflag",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setSecBiasing": {
                "guidance": "Set bremsstrahlung or delta-e- splitting/Russian roullette per region.\nbProcNam : process name\nbRegNam  : region name\nbFactor  : number of splitted gamma or probability of Russian roulette\nbEnergy  : max energy of a secondary for this biasing method\nunit of energy",
                "params": [
                    {
                        "name": "bProcNam",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "bRegNam",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "bFactor",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "bEnergy",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "bUnit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "spline": {
                "guidance": "Enable/disable usage spline for Physics Vectors",
                "params": [
                    {
                        "default": "0",
                        "name": "spl",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "verbose": {
                "guidance": "Set verbose level for EM physics",
                "params": [
                    {
                        "default": "1",
                        "name": "verb1",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "workerVerbose": {
                "guidance": "Set worker verbose level for EM physics",
                "params": [
                    {
                        "default": "1",
                        "name": "verb2",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "inactivate": {
            "guidance": "Inactivate process\nInactivate processes\nInactivate  name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "List up process names\nlist [type]\ntype: process type [all:for all proceeses]",
            "params": [
                {
                    "default": "all",
                    "name": "type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "msc": {
            "DisplacementBeyondSafety": {
                "guidance": "Enable/disable displacement at geometry boundary",
                "params": [
                    {
                        "default": "0",
                        "name": "cat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "FactorForAngleLimit": {
                "guidance": "Set factor for computation of a limit for -t (invariant trasfer)\nRange of parameters : Fact>0",
                "params": [
                    {
                        "default": "1",
                        "name": "Fact",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "GeomFactor": {
                "guidance": "Set GeomFactor parameter for msc processes\nRange of parameters : Fg>0",
                "params": [
                    {
                        "default": "3.5",
                        "name": "Fg",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "LateralDisplacement": {
                "guidance": "Enable/disable sampling of lateral displacement",
                "params": [
                    {
                        "default": "1",
                        "name": "lat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "MuHadLateralDisplacement": {
                "guidance": "Enable/disable sampling of lateral displacement for muons and hadrons",
                "params": [
                    {
                        "default": "1",
                        "name": "mulat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "RangeFactor": {
                "guidance": "Set RangeFactor for msc processes of e+-\nRange of parameters : Fr>0",
                "params": [
                    {
                        "default": "0.04",
                        "name": "Fr",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "RangeFactorMuHad": {
                "guidance": "Set RangeFactor for msc processes of muons/hadrons\nRange of parameters : Fr>0",
                "params": [
                    {
                        "default": "0.2",
                        "name": "Fr1",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "Skin": {
                "guidance": "Set skin parameter for msc processes",
                "params": [
                    {
                        "name": "skin",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "StepLimit": {
                "guidance": "Set msc step limitation type",
                "params": [
                    {
                        "name": "StepLim",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "StepLimitMuHad": {
                "guidance": "Set msc step limitation type for muons/hadrons",
                "params": [
                    {
                        "name": "StepLim1",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "ThetaLimit": {
                "guidance": "Set the limit on the polar angle for msc and single scattering",
                "params": [
                    {
                        "name": "theta",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "UseMottCorrection": {
                "guidance": "Enable usage of Mott corrections for e- elastic scattering",
                "params": [
                    {
                        "default": "0",
                        "name": "mott",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        },
        "setVerbose": {
            "guidance": "Set verbose level for processes\nsetVerbose level [type or name]\nlevel: verbose level\nname : process name\ntype : process type\n[all] for all proceeses",
            "params": [
                {
                    "name": "verbose",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "all",
                    "name": "type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose Level for Process Table\nverbose [level]\nlevel: verbose level\nRange of parameters : verbose >=0",
            "params": [
                {
                    "default": "1",
                    "name": "verbose",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "random": {
        "resetEngineFrom": {
            "guidance": "Reset the status of the rndm engine from a file.\nSee CLHEP manual for detail.\nThe engine status must be stored beforehand.\nDirectory of the status file should be set by /random/setDirectoryName.",
            "params": [
                {
                    "default": "currentRun.rndm",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "resetEngineFromEachEvent": {
            "guidance": "Reset the status of the rndm engine from a file at each event.\nNote that the file must follow the following naming convention:\nrun{#1}evt{#2}.rndm ; where #1 is the run number and #2 is the event number.\nFor example to re-seed the first event of the first run the file should be called run0evt0.rndm.\nIf for a specific run/event the file is not found, the standard re-seeding strategy is used.\nThis command has meaning only in MT mode for strong reproducibility studies.\nDirectory of the status file should be set by /random/setDirectoryName.",
            "params": [
                {
                    "default": "0",
                    "name": "",
                    "omit": "False",
                    "type": "b"
                }
            ]
        },
        "saveEachEventFlag": {
            "guidance": "Save random number status at beginning of each event.\nFile name contains run and event numbers: runXXXevtYYY.rndm",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "saveThisEvent": {
            "guidance": "copy currentEvent.rndm to runXXXevtYYY.rndm",
            "params": []
        },
        "saveThisRun": {
            "guidance": "copy currentRun.rndm to runXXX.rndm",
            "params": []
        },
        "setDirectoryName": {
            "guidance": "Define the directory name of the rndm status files.\nDirectory will be created if it does not exist.",
            "params": [
                {
                    "default": "./",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setSavingFlag": {
            "guidance": "The randomNumberStatus will be saved at :\nbegining of run (currentRun.rndm) and begining of event (currentEvent.rndm)",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "setSeeds": {
            "guidance": "Initialize the random number generator with integer seed stream.\nNumber of integers should be more than 1.\nActual number of integers to be used depends on the individual random number engine.\nThis command sets the seeds for the master thread.",
            "params": [
                {
                    "name": "IntArray",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "run": {
        "abort": {
            "guidance": "Abort current run processing.\nIf softAbort is false (default), currently processing event will be immediately aborted,\nwhile softAbort is true, abortion occurs after processing the current event.",
            "params": [
                {
                    "default": "0",
                    "name": "softAbort",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "abortCurrentEvent": {
            "guidance": "Abort currently processing event.",
            "params": []
        },
        "beamOn": {
            "guidance": "Start a Run.\nIf G4 kernel is not initialized, it will be initialized.\nDefault number of events to be processed is 1.\nThe second and third arguments can be used for\nexecuting a macro file at the end of each event.\nIf the second argument, i.e. name of the macro\nfile, is given but the third argument is not,\nthe macro file will be executed for all of the\nevent.\nIf the third argument (nSelect) is given, the\nmacro file will be executed only for the first\nnSelect events.",
            "params": [
                {
                    "default": "1",
                    "name": "numberOfEvent",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "***NULL***",
                    "name": "macroFile",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "-1",
                    "name": "nSelect",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "breakAtBeginOfEvent": {
            "guidance": "Set a break point at the begining of every event.",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "breakAtEndOfEvent": {
            "guidance": "Set a break point at the end of every event.",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "constructScoringWorlds": {
            "guidance": "Constrct scoring parallel world(s) if defined.\nThis command is not mandatory, but automatically called when a run starts.\nBut the user may use this to visualize the scoring world(s) before a run to start.",
            "params": []
        },
        "dumpCouples": {
            "guidance": "Dump material-cuts-couple information.\nNote that material-cuts-couple information is updated\nafter BeamOn has started.",
            "params": []
        },
        "dumpRegion": {
            "guidance": "Dump region information.\nIn case name of a region is not given, all regions will be displayed.",
            "params": [
                {
                    "default": "**ALL**",
                    "name": "regionName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "eventModulo": {
            "guidance": "Set the event modulo for dispatching events to worker threads\ni.e. each worker thread is ordered to simulate N events and then\ncomes back to G4MTRunManager for next set.\nIf it is set to zero (default value), N is roughly given by this.\nN = int( sqrt( number_of_events / number_of_threads ) )\nThe value N may affect on the computing performance in particular\nif N is too small compared to the total number of events.\nThe second parameter seedOnce specifies how frequently each worker\nthread is seeded by the random number sequence contrally managed\nby the master G4MTRunManager.\n- If seedOnce is set to 0 (default), seeds that are centrally managed\nby G4MTRunManager are set for every event of every worker thread.\nThis option guarantees event reproducability regardless of number\nof threads.\n- If seedOnce is set to 1, seeds are set only once for the first\nevent of each run of each worker thread. Event reproducability is\nguaranteed only if the same number of worker threads are used.\nOn the other hand, this option offers better computing performance\nin particular for applications with relatively small primary\nparticle energy and large number of events.\n- If seedOnce is set to 2, seeds are set only for the first event of\ngroup of N events. This option is reserved for the future use when\nGeant4 allows number of threads to be dynatically changed during an\nevent loop.\nThis command is valid only for multi-threaded mode.\nThis command is ignored if it is issued in sequential mode.",
            "params": [
                {
                    "default": "0",
                    "name": "N",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "seedOnce",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "geometryModified": {
            "guidance": "Force geometry to be closed (re-voxellized) again.\nThis command must be applied if geometry has been modified\nafter the first initialization (or BeamOn).",
            "params": []
        },
        "getCutForAGivenParticle": {
            "guidance": "Get a cut value to a specific particle\nUsage: /run/getCutForAGivenParticle  gamma",
            "params": [
                {
                    "name": "particleName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "initialize": {
            "guidance": "Initialize G4 kernel.",
            "params": []
        },
        "numberOfThreads": {
            "guidance": "Set the number of threads to be used.\nThis command works only in PreInit state.\nThis command is valid only for multi-threaded mode.\nThe command is ignored if it is issued in sequential mode.\nRange of parameters : nThreads >0",
            "params": [
                {
                    "default": "2",
                    "name": "nThreads",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "optimizeGeometry": {
            "guidance": "Set the optimization flag for geometry.\nIf it is set to TRUE, G4GeometryManager will optimize\nthe geometry definitions.\nGEANT4 is initialized with this flag as TRUE.",
            "params": [
                {
                    "default": "1",
                    "name": "optimizeFlag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "particle": {
            "addProcManager": {
                "guidance": "add process manager to specified particle type",
                "params": [
                    {
                        "name": "particleType",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "applyCuts": {
                "guidance": "Set applyCuts flag for a particle.\nSome EM processes which do not have infrared divergence\nmay generate gamma, e- and/or e+ with kinetic energies\nbelow the production threshold. By setting this flag,\nsuch secondaries below threshold are eliminated and\nkinetic energies of such secondaries are accumulated\nto the energy deposition of their mother.\nNote that 'applyCuts' makes sense only for gamma,\ne- and e+. If this command is issued for other particle,\na warning message is displayed and the command is\nignored.\nIf particle name is 'all', this command affects on\ngamma, e- and e+.",
                "params": [
                    {
                        "default": "true",
                        "name": "Flag",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "all",
                        "name": "Particle",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "buildPhysicsTable": {
                "guidance": "build physics table of specified particle type",
                "params": [
                    {
                        "name": "particleType",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "dumpCutValues": {
                "guidance": "Dump a list of production threshold values in range and energy\nfor all registered material-cuts-couples.\nDumping a list takes place when you issue 'beamOn' and\nactual conversion tables from range to energy are available.\nIf you want a list 'immediately', use '/run/dumpRegion' for threshold\nlist given in gange only. Also, '/run/dumpCouples' gives you the\ncurrent list if you have already issued 'run/beamOn' at least once.",
                "params": [
                    {
                        "default": "all",
                        "name": "particle",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "dumpList": {
                "guidance": "Dump List of particles in G4VUserPhysicsList.",
                "params": []
            },
            "dumpOrderingParam": {
                "guidance": "Dump a list of ordering parameter",
                "params": [
                    {
                        "default": "-1",
                        "name": "subtype",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "retrievePhysicsTable": {
                "guidance": "Retrieve Physics Table\nEnter directory name or OFF to switch off",
                "params": [
                    {
                        "name": "dirName",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setStoredInAscii": {
                "guidance": "Switch on/off ascii mode in store/retreive Physics Table\nEnter 0(binary) or 1(ascii)\nRange of parameters : ascii ==0 || ascii ==1",
                "params": [
                    {
                        "default": "0",
                        "name": "ascii",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "storePhysicsTable": {
                "guidance": "Store Physics Table\nEnter directory name",
                "params": [
                    {
                        "name": "dirName",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "Set the Verbose level of G4VUserPhysicsList.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more\nRange of parameters : level >=0 && level <=3",
                "params": [
                    {
                        "default": "0",
                        "name": "level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "physicsModified": {
            "guidance": "Force all physics tables recalculated again.\nThis command must be applied\nif physics process has been modified after the\nfirst initialization (or BeamOn).",
            "params": []
        },
        "pinAffinity": {
            "guidance": "Locks each thread to a specific logical core. Workers are locked in round robin to logical cores.\nThis command is valid only for multi-threaded mode.\nThis command works only in PreInit state.\nThis command is ignored if it is issued in sequential mode.\nIf a value n>0 is provided it starts setting affinity from the n-th CPU (note: counting from 1).\nE.g. /run/pinAffinity 3 locks first thread on third logical CPU (number 2).\nIf a value n<0 is provided never locks on n-th CPU.\nRange of parameters : pinAffinity > 0 || pinAffinity < 0",
            "params": [
                {
                    "default": "1",
                    "name": "pinAffinity",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "printProgress": {
            "guidance": "Display begin_of_event information at given frequency.\nIf it is set to zero, only the begin_of_run is shown.\nIf it is set to -1, no print-out is shown.\nRange of parameters : mod>=-1",
            "params": [
                {
                    "default": "-1",
                    "name": "mod",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "reinitializeGeometry": {
            "guidance": "Force geometry to be rebuilt once again.\nThis command must be applied if the user needs his/her\ndetector construction to be reinvoked.\n/run/geometryModified is automatically issued with this command.",
            "params": [
                {
                    "default": "0",
                    "name": "destroyFirst",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "setCut": {
            "guidance": "Set default cut value\nRange of parameters : cut >=0.0",
            "params": [
                {
                    "default": "1",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setCutForAGivenParticle": {
            "guidance": "Set a cut value to a specific particle\nUsage: /run/setCutForAGivenParticle  gamma  1. mm",
            "params": [
                {
                    "name": "particleName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "1.",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "unit",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setCutForRegion": {
            "guidance": "Set cut value for a region",
            "params": [
                {
                    "name": "Region",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "storeRndmStatToEvent": {
            "guidance": "Flag to store rndm status to G4Event object.\nflag = 0 : not store (default)\nflag = 1 : status before primary particle generation is stored\nflag = 2 : status before event processing (after primary particle generation) is stored\nflag = 3 : both are stored\nNote: Some performance overhead may be seen by storing rndm status, in particular\nfor the case of simplest geometry and small number of tracks per event.\nRange of parameters : flag>=0 && flag<3",
            "params": [
                {
                    "default": "0",
                    "name": "flag",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "useMaximumLogicalCores": {
            "guidance": "Set the number of threads to be the number of available logical cores.\nThis command works only in PreInit state.\nThis command is valid only for multi-threaded mode.\nThe command is ignored if it is issued in sequential mode.",
            "params": []
        },
        "verbose": {
            "guidance": "Set the Verbose level of G4RunManager.\n0 : Silent (default)\n1 : Display main topics\n2 : Display main topics and run summary\nRange of parameters : level >=0 && level <=2",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "tracking": {
        "abort": {
            "guidance": "Abort current G4Track processing.",
            "params": []
        },
        "resume": {
            "guidance": "Resume current G4Track processing.",
            "params": []
        },
        "storeTrajectory": {
            "guidance": "Store trajectories or not.\n0 : Don't Store trajectories.\n!=0 : Store trajectories.\n1 : Choose G4Trajectory as default.\n2 : Choose G4SmoothTrajectory as default.\n3 : Choose G4RichTrajectory as default.\n4 : Choose G4RichTrajectory with auxiliary points as default.\nRange of parameters : Store >=0 && Store <= 4",
            "params": [
                {
                    "default": "0",
                    "name": "Store",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level of tracking category.\n-1 : Silent.\n0 : Silent.\n1 : Minium information of each Step.\n2 : Addition to Level=1, info of secondary particles.\n3 : Addition to Level=1, pre/postStepoint information\nafter all AlongStep/PostStep process executions.\n4 : Addition to Level=3, pre/postStepoint information\nat each AlongStepPostStep process execuation.\n5 : Addition to Level=4, proposed Step length information\nfrom each AlongStepPostStep process.\nRange of parameters : verbose_level >=-1",
            "params": [
                {
                    "default": "0",
                    "name": "verbose_level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "units": {
        "list": {
            "guidance": "full list of available units.",
            "params": []
        }
    },
    "vis": {
        "ASCIITree": {
            "set": {
                "outFile": {
                    "guidance": "Set name of output file.",
                    "params": [
                        {
                            "default": "G4cout",
                            "name": "out-filename",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                }
            }
        },
        "abortReviewKeptEvents": {
            "guidance": "Abort review of kept events.",
            "params": [
                {
                    "default": "1",
                    "name": "abort",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "disable": {
            "guidance": "Disables visualization system.",
            "params": []
        },
        "drawTree": {
            "guidance": "(DTREE) Creates a scene consisting of this physical volume and\n  produces a representation of the geometry hieracrhy.\nThe scene becomes current.",
            "params": [
                {
                    "default": "world",
                    "name": "physical-volume-name",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "ATree",
                    "name": "system",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawView": {
            "guidance": "Draw view from this angle, etc.",
            "params": [
                {
                    "default": "0",
                    "name": "theta-degrees",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "phi-degrees",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "pan-right",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "pan-up",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "pan-unit",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "1",
                    "name": "zoom-factor",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "dolly",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "dolly-unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawVolume": {
            "guidance": "Creates a scene containing this physical volume and asks the\ncurrent viewer to draw it.  The scene becomes current.\nIf physical-volume-name is \"world\" (the default), the main geometry\ntree (material world) is drawn.  If \"worlds\", all worlds - material\nworld and parallel worlds, if any - are drawn.  Otherwise a search of\nall worlds is made, taking the first matching occurence only.  To see\na representation of the geometry hierarchy of the worlds, try\n\"/vis/drawTree [worlds]\" or one of the driver/browser combinations\nthat have the required functionality, e.g., HepRep",
            "params": [
                {
                    "default": "world",
                    "name": "physical-volume-name",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "enable": {
            "guidance": "Enables/disables visualization system.",
            "params": [
                {
                    "default": "1",
                    "name": "enabled",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "geometry": {
            "set": {
                "colour": {
                    "guidance": "Sets colour of logical volume(s).\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1.",
                            "name": "red",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "daughtersInvisible": {
                    "guidance": "Makes daughters of logical volume(s) invisible.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "daughtersInvisible",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceAuxEdgeVisible": {
                    "guidance": "Forces auxiliary (soft) edges of logical volume(s) to be visible,\nregardless of the view parameters.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "forceAuxEdgeVisible",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceLineSegmentsPerCircle": {
                    "guidance": "Forces number of line segments per circle, the precision with which a\ncurved line or surface is represented by a polygon or polyhedron,\nregardless of the view parameters.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "-1",
                            "name": "lineSegmentsPerCircle",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "forceSolid": {
                    "guidance": "Forces logical volume(s) always to be drawn solid (surface drawing),\nregardless of the view parameters.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "forceSolid",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceWireframe": {
                    "guidance": "Forces logical volume(s) always to be drawn as wireframe,\nregardless of the view parameters.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "forceWireframe",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "lineStyle": {
                    "guidance": "Sets line style of logical volume(s) drawing.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "unbroken",
                            "name": "lineStyle",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "lineWidth": {
                    "guidance": "Sets line width of logical volume(s) drawing.\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "lineWidth",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "visibility": {
                    "guidance": "Sets visibility of logical volume(s).\n\"all\" sets all logical volumes.\nOptionally propagates down hierarchy to given depth.",
                    "params": [
                        {
                            "default": "all",
                            "name": "logical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "depth",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "visibility",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                }
            }
        },
        "initialize": {
            "guidance": "Initialise visualisation manager.",
            "params": []
        },
        "list": {
            "guidance": "Lists visualization parameters.",
            "params": [
                {
                    "default": "warnings",
                    "name": "verbosity",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "open": {
            "guidance": "Creates a scene handler ready for drawing.\nThe scene handler becomes current (the name is auto-generated).",
            "params": [
                {
                    "name": "graphics-system-name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "600",
                    "name": "window-size-hint",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "reviewKeptEvents": {
            "guidance": "Review kept events.\nIf a macro file is specified, it is executed for each event.\nIf a macro file is not specified, each event is drawn to the current\nviewer.  After each event, the session is paused.  The user may issue\nany allowed command.  Then enter \"cont[inue]\" to continue to the next\nevent.\nUseful commands might be:\n  \"/vis/viewer/...\" to change the view (zoom, set/viewpoint,...).\n  \"/vis/oglx/printEPS\" to get hard copy.\n  \"/vis/open\" to get alternative viewer.\n  \"/vis/abortReviewKeptEvents\", then \"cont[inue]\", to abort.",
            "params": [
                {
                    "name": "macro-file-name",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "scene": {
            "activateModel": {
                "guidance": "Activate or de-activate model.\nAttempts to match search string to name of model - use unique sub-string.\nUse \"/vis/scene/list\" to see model names.\nIf name == \"all\" (default), all models are activated.",
                "params": [
                    {
                        "default": "all",
                        "name": "search-string",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "1",
                        "name": "activate",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "create": {
                "guidance": "Creates an empty scene.\nInvents a name if not supplied.  This scene becomes current.",
                "params": [
                    {
                        "name": "scene-name",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "endOfEventAction": {
                "guidance": "Accumulate or refresh the viewer for each new event.\n\"accumulate\": viewer accumulates hits, etc., event by event, or\n\"refresh\": viewer shows them at end of event or, for direct-screen\n  viewers, refreshes the screen just before drawing the next event.",
                "params": [
                    {
                        "default": "refresh",
                        "name": "action",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "maxNumber",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "endOfRunAction": {
                "guidance": "Accumulate or refresh the viewer for each new run.\n\"accumulate\": viewer accumulates hits, etc., run by run, or\n\"refresh\": viewer shows them at end of run or, for direct-screen\n  viewers, refreshes the screen just before drawing the first\n  event of the next run.\nThe detector remains or is redrawn.",
                "params": [
                    {
                        "default": "refresh",
                        "name": "action",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "list": {
                "guidance": "Lists scene(s).\n\"help /vis/verbose\" for definition of verbosity.",
                "params": [
                    {
                        "default": "all",
                        "name": "scene-name",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "warnings",
                        "name": "verbosity",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "notifyHandlers": {
                "guidance": "Notifies scene handlers and forces re-rendering.\nNotifies the handler(s) of the specified scene and forces a\nreconstruction of any graphical databases.\nClears and refreshes all viewers of current scene.\n  The default action \"refresh\" does not issue \"update\" (see\n    /vis/viewer/update).\nIf \"flush\" is specified, it issues an \"update\" as well as\n  \"refresh\" - \"update\" and initiates post-processing\n  for graphics systems which need it.\nThe default for <scene-name> is the current scene name.\nThis command does not change current scene, scene handler or viewer.",
                "params": [
                    {
                        "default": "taken from the current value",
                        "name": "scene-name",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "refresh",
                        "name": "refresh-flush",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "select": {
                "guidance": "Selects a scene\nMakes the scene current.  \"/vis/scene/list\" to see\n possible scene names.",
                "params": [
                    {
                        "name": "scene-name",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "specify": {
            "guidance": "Draws logical volume with Boolean components, voxels and readout geometry.\nCreates a scene consisting of this logical volume and asks the\n  current viewer to draw it to the specified depth of descent\n  showing boolean components (if any), voxels (if any)\n  and readout geometry (if any), under control of the appropriate flag.\nNote: voxels are not constructed until start of run - /run/beamOn.\nThe scene becomes current.",
            "params": [
                {
                    "name": "logical-volume-name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "1",
                    "name": "depth-of-descent",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "booleans-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "voxels-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "readout-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "axes-flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "touchable": {
            "set": {
                "colour": {
                    "guidance": "Set colour of current touchable.\nUse \"/vis/set/touchable\" to set current touchable.\nIf \"red\" is a string understood by the vis system it will be taken.\n  Otherwise the values of\ned\", \"green\", etc., are used.",
                    "params": [
                        {
                            "default": "1.",
                            "name": "red",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "daughtersInvisible": {
                    "guidance": "Daughters of current touchable invisible: true/false.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "daughtersInvisible",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceAuxEdgeVisible": {
                    "guidance": "Force auxiliary (soft) edges of current touchable to be visible: true/false.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "forceAuxEdgeVisible",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceSolid": {
                    "guidance": "Force current touchable always to be drawn solid (surface drawing).\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "forceSolid",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceWireframe": {
                    "guidance": "Force current touchable always to be drawn as wireframe.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "forceWireframe",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "lineSegmentsPerCircle": {
                    "guidance": "For current touchable, set number of line segments per circle, the\nprecision with which a curved line or surface is represented by a\npolygon or polyhedron, regardless of the view parameters.\nNegative to pick up G4Polyhedron default value.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "-1",
                            "name": "lineSegmentsPerCircle",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                },
                "lineStyle": {
                    "guidance": "Set line style of current touchable drawing.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "unbroken",
                            "name": "lineStyle",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "lineWidth": {
                    "guidance": "Set line width of current touchable.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "1",
                            "name": "lineWidth",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "visibility": {
                    "guidance": "Set visibility of current touchable: true/false.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "visibility",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                }
            }
        },
        "verbose": {
            "guidance": "Simple graded message scheme - digit or string (1st character defines):\n0) quiet,          Nothing is printed.\n1) startup,        Startup and endup messages are printed...\n2) errors,         ...and errors...\n3) warnings,       ...and warnings...\n4) confirmations,  ...and confirming messages...\n5) parameters,     ...and parameters of scenes and views...\n6) all             ...and everything available.",
            "params": [
                {
                    "default": "warnings",
                    "name": "verbosity",
                    "omit": "True",
                    "type": "s"
                }
            ]
        }
    }
}