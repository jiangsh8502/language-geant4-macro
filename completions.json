{
    "analysis": {
        "mode": {
            "guidance": "",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "control": {
        "add": {
            "guidance": "Define a new alias as the sum of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "alias": {
            "guidance": "Set an alias.\nString can be aliased by this command.\nThe string may contain one or more spaces,\nthe string must be enclosed by double quotes (\").\nTo use an alias, enclose the alias name with\nparenthis \"{\" and \"}\".",
            "params": [
                {
                    "name": "aliasName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "aliasValue",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "createHTML": {
            "guidance": "Generate HTML files for all of sub-directories and commands.\nDirectory path should be given by FULL-PATH.",
            "params": [
                {
                    "default": "/",
                    "name": "dirPath",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "divide": {
            "guidance": "Define a new alias as the division of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "doif": {
            "guidance": "Execute a macro file if the expression is true.\nSyntax : <double> <comp> <double> <UI_command>",
            "params": [
                {
                    "name": "left",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "comp",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "right",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "UI_command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "echo": {
            "guidance": "Display the aliased value.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "execute": {
            "guidance": "Execute a macro file.",
            "params": [
                {
                    "name": "fileName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "foreach": {
            "guidance": "Execute a macro file more than once.\nLoop counter can be used as an aliased variable.\nValues must be separated by a space.",
            "params": [
                {
                    "name": "macroFile",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "counterName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "valueList",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "getEnv": {
            "guidance": "Get a shell environment variable and define it as an alias.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "getVal": {
            "guidance": "Get the current value of the UI command and define it as an alias.\nCommand is ignored if the UI command does not support GetCurrentValue().\nSyntax : <alias_name> <UI_command>",
            "params": [
                {
                    "name": "alias_name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "UI_command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "if": {
            "guidance": "Execute a macro file if the expression is true.\nSyntax : <double> <comp> <double> <macro_file>",
            "params": [
                {
                    "name": "left",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "comp",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "right",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "aliasValue",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "listAlias": {
            "guidance": "List aliases.",
            "params": []
        },
        "loop": {
            "guidance": "Execute a macro file more than once.\nLoop counter can be used as an aliased variable.",
            "params": [
                {
                    "name": "macroFile",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "counterName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "initialValue",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "finalValue",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "1",
                    "name": "stepSize",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "macroPath": {
            "guidance": "Set macro search pathwith colon-separated list.",
            "params": [
                {
                    "name": "path",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "manual": {
            "guidance": "Display all of sub-directories and commands.\nDirectory path should be given by FULL-PATH.",
            "params": [
                {
                    "default": "/",
                    "name": "dirPath",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "matScan": {
            "eyePosition": {
                "guidance": "Define the eye position.",
                "params": [
                    {
                        "default": "0",
                        "name": "X",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "Y",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "Z",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "m",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "phi": {
                "guidance": "Define phi range.\nUsage : /control/matScan/phi [nbin] [phiMin] [phiSpan] [unit]\nNotation of angles :\nphi   --- +X axis : 0 deg. / +Y axis : 90 deg. / -X axis : 180 deg. / -Y axis : 270 deg.",
                "params": [
                    {
                        "name": "nbin",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "phiMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "phiSpan",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "deg",
                        "name": "unit",
                        "omit": "True",
                        "type": "c"
                    }
                ]
            },
            "region": {
                "guidance": "Define region name to be scanned.\n/control/matScan/regionSensitive command is automatically\nset to TRUE with this command.",
                "params": [
                    {
                        "default": "DefaultRegionForTheWorld",
                        "name": "region",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "regionSensitive": {
                "guidance": "Set region sensitivity.\nThis command is automatically set to TRUE\nif /control/matScan/region command is issued.",
                "params": [
                    {
                        "default": "0",
                        "name": "senseFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "scan": {
                "guidance": "Start material scanning.\nScanning range should be defined with\n/control/matScan/theta and /control/matSca/phi commands.",
                "params": []
            },
            "singleMeasure": {
                "guidance": "Measure thickness for one particular direction.\nNotation of angles :\ntheta --- +Z axis : +90 deg. / X-Y plane : 0 deg. / -Z axis : -90 deg.\nphi   --- +X axis : 0 deg. / +Y axis : 90 deg. / -X axis : 180 deg. / -Y axis : 270 deg.",
                "params": [
                    {
                        "name": "theta",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "phi",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "deg",
                        "name": "unit",
                        "omit": "True",
                        "type": "c"
                    }
                ]
            },
            "singleTo": {
                "guidance": "Measure thicknesss for one direction defined by a unit vector.",
                "params": [
                    {
                        "name": "X",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "theta": {
                "guidance": "Define theta range.\nUsage : /control/matScan/theta [nbin] [thetaMin] [thetaSpan] [unit]\nNotation of angles :\ntheta --- +Z axis : +90 deg. / X-Y plane : 0 deg. / -Z axis : -90 deg.",
                "params": [
                    {
                        "name": "nbin",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "thetaMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "thetaSpan",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "deg",
                        "name": "unit",
                        "omit": "True",
                        "type": "c"
                    }
                ]
            }
        },
        "maximumStoredHistory": {
            "guidance": "Set maximum number of stored UI commands.",
            "params": [
                {
                    "default": "20",
                    "name": "max",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "multiply": {
            "guidance": "Define a new alias as the multiplification of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "remainder": {
            "guidance": "Define a new alias as the remainder of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "saveHistory": {
            "guidance": "Store command history to a file.\nDefaul file name is G4history.macro.",
            "params": [
                {
                    "default": "G4History.macro",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "shell": {
            "guidance": "Execute a (Unix) SHELL command.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "stopSavingHistory": {
            "guidance": "Stop saving history file.",
            "params": []
        },
        "subtract": {
            "guidance": "Define a new alias as the subtraction of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "suppressAbortion": {
            "guidance": "Suppress the program abortion caused by G4Exception.\nSuppression level = 0 : no suppression\n= 1 : suppress during EventProc state\n= 2 : full suppression, i.e. no abortion by G4Exception\nWhen abortion is suppressed, you will get error messages issued by G4Exception,\nand there is NO guarantee for the correct result after the G4Exception error message.\nRange of parameters : level >= 0 && level <= 2",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "unalias": {
            "guidance": "Remove an alias.",
            "params": [
                {
                    "name": "aliasName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Applied command will also be shown on screen.\nThis command is useful with MACRO file.\n0 : silent\n1 : only the valid commands are shown.\n2 : comment lines are also shown (default).\nRange of parameters : switch >= 0 && switch <=2",
            "params": [
                {
                    "default": "2",
                    "name": "switch",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "cuts": {
        "dump": {
            "guidance": "Dump cuplues in ProductuinCutsTable.",
            "params": []
        },
        "setHighEdge": {
            "guidance": "Set high edge energy value\nRange of parameters : edge >0.0",
            "params": [
                {
                    "default": "100",
                    "name": "edge",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "TeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setLowEdge": {
            "guidance": "Set low edge energy value\nRange of parameters : edge >0.0",
            "params": [
                {
                    "default": "0.99",
                    "name": "edge",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "keV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setMaxCutEnergy": {
            "guidance": "Set maximum of cut energy value\nRange of parameters : cut >0.0",
            "params": [
                {
                    "default": "10",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set the Verbose level of G4ProductionCutsTable.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more info\n2 : Display debug info\nRange of parameters : level >=0 && level <=3",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "data": {
        "delete": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "deleteAll": {
            "guidance": "",
            "params": []
        },
        "dump": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "",
            "params": []
        },
        "reset": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "resetAll": {
            "guidance": "",
            "params": []
        },
        "save": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "elimed": {
        "conventional": {
            "configuration": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "quad1FieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "quad1z": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "quad2FieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "quad2z": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "quadFieldPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "steerer1XFieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "steerer1YFieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "steerer2XFieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "steerer2YFieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "steererYFieldPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "disableAll": {
            "guidance": "Disable all components at once.",
            "params": []
        },
        "enableAll": {
            "guidance": "Enable all components at once.",
            "params": []
        },
        "energySelector": {
            "collimatorInnerRadius": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldConfiguration": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldMinusPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldPlusPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldScale": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "slitMaterial": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "slitPositionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "slitThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "slitWidth": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "faradayCup": {
            "beveledElectrodeEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "bottomRingThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "cupThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "entranceWindowThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "fieldEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldMapFile": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldScale": {
                "guidance": "Set electric field scale with respect to the one used in the field map",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "guardRingThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "innerRadius": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "massRingThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "outerRadius": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "teflonRingEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "teflonRingThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "maxStep": {
            "guidance": "Set the maximum step length for all components.",
            "params": [
                {
                    "name": "value",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "maxTrackLength": {
            "guidance": "Set the maximum track length for all components.",
            "params": [
                {
                    "name": "value",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "monitorChamber": {
            "cavityMaterialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "centralWindowMaterialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "centralWindowThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "copperLayerThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "doseScoringEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "doseScoringPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "electrodeMaterialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "enterWindowThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "exitWindowThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "firstCavityThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "secondCavityThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "wallMaterialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "windowMaterialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "phantom": {
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "materialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sizeX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sizeY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sizeZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "quadrupoles": {
            "configuration": {
                "guidance": "Set magnets to one of the preset configurations",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "exitHoleRadius": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "externalChamberXSize": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "externalChamberYSize": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "externalChamberZSize": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "field120negPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "field120posPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "field160Path": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "field80negPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "field80posPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fieldEnabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "magnetCount": {
                "guidance": "Set total number of magnets",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "magnetModel": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "magnetOrientation": {
                "guidance": "Set orientation of i-th magnet (-1 or +1)",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "magnetSize": {
                "guidance": "Set the size (in mm) for i-th magnet",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "magnetZ": {
                "guidance": "Set z position of the beginning of the magnet",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "wallThickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "scatteringFoil": {
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "materialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "radius": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "thickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "sem": {
            "enabled": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "materialName": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxStep": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "motherVolume": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "positionX": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionY": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "positionZ": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "radius": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "thickness": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "verbose": {
            "guidance": "Set verbosity (0 = no messages)",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "worldMaterial": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "event": {
        "abort": {
            "guidance": "Abort current event.",
            "params": []
        },
        "keepCurrentEvent": {
            "guidance": "Store the current event to G4Run object instead of deleting it at the end of event.\nStored event is available through G4Run until the begining of next run.\nGiven the potential large memory size of G4Event and its datamember objects stored in G4Event,\nthe user must be careful and responsible for not to store too many G4Event objects.",
            "params": []
        },
        "stack": {
            "clear": {
                "guidance": "Clear stacked tracks.\n2 : clear all tracks in all stacks\n1 : clear tracks in the urgent and waiting stacks\n0 : clear tracks in the waiting stack (default)\n-1 : clear tracks in the urgent stack\n-2 : clear tracks in the postponed stack\nRange of parameters : level>=-2&&level<=2",
                "params": [
                    {
                        "default": "0",
                        "name": "level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "status": {
                "guidance": "List current status of the stack.",
                "params": []
            },
            "verbose": {
                "guidance": "Set verbose level for G4StackManager\n0 : Silence (default)\n1 : Minimum statistics\n2 : Detailed reports\nNote - this value is overwritten by /event/verbose command.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            }
        },
        "verbose": {
            "guidance": "Set Verbose level of event management category.\n0 : Silent\n1 : Stacking information\n2 : More...\nRange of parameters : level>=0",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "fieldDebug": {
        "dump": {
            "guidance": "",
            "params": [
                {
                    "name": "path",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "countX",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "countY",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "countZ",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "centerX",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "centerY",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "centerZ",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "grid",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "enabled": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "fields": {
        "list": {
            "guidance": "",
            "params": []
        },
        "verbose": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "geometry": {
        "navigator": {
            "check_mode": {
                "guidance": "Set navigator in -check_mode- state.\nThis will cause extra checks to be applied during\nnavigation. More strict and less tolerant conditions\nare applied. A run-time performance penalty may be\nobserved when the -check_mode- state is activated.\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!",
                "params": [
                    {
                        "default": "0",
                        "name": "checkFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "push_notify": {
                "guidance": "Set navigator verbosity push notifications.\nThis allows to disable/re-enable verbosity in\nnavigation, when tracks may get stuck and require\none artificial push along the direction by the\nnavigator. Notification is active by default.\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!",
                "params": [
                    {
                        "default": "1",
                        "name": "pushFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "reset": {
                "guidance": "Reset navigator and navigation history.\nNOTE: must be called only after kernel has been\ninitialized once through the run manager!",
                "params": []
            },
            "verbose": {
                "guidance": "Set run-time verbosity for the navigator.\n0 : Silent (default)\n1 : Display volume positioning and step lengths\n2 : Display step/safety info on point location\n3 : Display minimal state at -every- step\n4 : Maximum verbosity (very detailed!)\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!\nRange of parameters : level >=0 && level <=4",
                "params": [
                    {
                        "default": "0",
                        "name": "level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "test": {
            "maximum_errors": {
                "guidance": "Set the maximum number of overlap errors to report\nfor each single volume being checked.\nOnce reached the maximum number specified, overlaps\naffecting that volume further than that are simply ignored.",
                "params": [
                    {
                        "default": "1",
                        "name": "maximum_errors",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "recursion_depth": {
                "guidance": "Set the depth in the geometry tree for recursion.\nrecursive_test will then stop after reached the specified depth.\nBy default, recursion will proceed for the whole depth.",
                "params": [
                    {
                        "default": "-1",
                        "name": "recursion_depth",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "recursion_start": {
                "guidance": "Set the initial level in the geometry tree for recursion.\nrecursive_test will then start from the specified level.",
                "params": [
                    {
                        "default": "0",
                        "name": "initial_level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "resolution": {
                "guidance": "Set the number of points on surface to be generated for\nchecking overlaps.",
                "params": [
                    {
                        "default": "10000",
                        "name": "resolution",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "run": {
                "guidance": "Start running the recursive overlap check.\nVolumes are recursively asked to verify for overlaps\nfor points generated on the surface against their\nrespective mother volume and sisters at the same\nlevel, performing for all daughters and daughters of\ndaughters, etc.\nNOTE: it may take a very long time,\ndepending on the geometry complexity !",
                "params": []
            },
            "tolerance": {
                "guidance": "Define tolerance (in mm) by which overlaps reports\nshould be reported. By default, all overlaps are\nreported, i.e. tolerance is set to: 0*mm.",
                "params": [
                    {
                        "default": "taken from the current value",
                        "name": "Tolerance",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbosity": {
                "guidance": "Specify if running in verbosity mode or not.\nBy default verbosity is set to ON (TRUE).",
                "params": [
                    {
                        "default": "1",
                        "name": "verbosity",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        }
    },
    "gps": {
        "List": {
            "guidance": "List available particles.\nInvoke G4ParticleTable.",
            "params": []
        },
        "ang": {
            "focuspoint": {
                "guidance": "Set the focusing point for the beam",
                "params": [
                    {
                        "name": "x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "z",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "maxphi": {
                "guidance": "Set maximum phi",
                "params": [
                    {
                        "default": "3.14159",
                        "name": "MaxPhi",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "maxtheta": {
                "guidance": "Set maximum theta",
                "params": [
                    {
                        "default": "3.14159",
                        "name": "MaxTheta",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "minphi": {
                "guidance": "Set minimum phi",
                "params": [
                    {
                        "name": "MinPhi",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "mintheta": {
                "guidance": "Set minimum theta",
                "params": [
                    {
                        "default": "0",
                        "name": "MinTheta",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "rot1": {
                "guidance": "Sets the 1st vector for angular distribution rotation matrix\nNeed not be a unit vector\nRange of parameters : AR1x != 0 || AR1y != 0 || AR1z != 0",
                "params": [
                    {
                        "name": "AR1x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "AR1y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "AR1z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "rot2": {
                "guidance": "Sets the 2nd vector for angular distribution rotation matrix\nNeed not be a unit vector\nRange of parameters : AR2x != 0 || AR2y != 0 || AR2z != 0",
                "params": [
                    {
                        "name": "AR2x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "AR2y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "AR2z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "sigma_r": {
                "guidance": "Set standard deviation in direction for 1D beam.",
                "params": [
                    {
                        "name": "Sigmara",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sigma_x": {
                "guidance": "Set standard deviation in direction in x-direc. for 2D beam",
                "params": [
                    {
                        "name": "Sigmaxa",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sigma_y": {
                "guidance": "Set standard deviation in direction in y-direc. for 2D beam",
                "params": [
                    {
                        "name": "Sigmaya",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "surfnorm": {
                "guidance": "Makes a user-defined distribution with respect to surface normals rather than x,y,z axes.\nDefault is false",
                "params": [
                    {
                        "default": "0",
                        "name": "surfnorm",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "type": {
                "guidance": "Sets angular source distribution type\nPossible variables are: iso, cos, planar, beam1d, beam2d, focused or user",
                "params": [
                    {
                        "default": "iso",
                        "name": "AngDis",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "user_coor": {
                "guidance": "true for using user defined angular co-ordinates\nDefault is false",
                "params": [
                    {
                        "default": "0",
                        "name": "useuserangaxis",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        },
        "direction": {
            "guidance": "Set momentum direction.\nDirection needs not to be a unit vector.\nAngular distribution type is set to planar.\nRange of parameters : Px != 0 || Py != 0 || Pz != 0",
            "params": [
                {
                    "name": "Px",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Py",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Pz",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "energy": {
            "guidance": "Set kinetic energy.",
            "params": [
                {
                    "name": "Energy",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "hist": {
            "file": {
                "guidance": "import the arb energy hist in an ASCII file",
                "params": [
                    {
                        "name": "HistFile",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "inter": {
                "guidance": "Sets the interpolation method for arbitrary distribution.",
                "params": [
                    {
                        "default": "Lin",
                        "name": "int",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "point": {
                "guidance": "Allows user to define a histogram\nEnter: Ehi Weight\nRange of parameters : Ehi >= 0. && Weight >= 0.",
                "params": [
                    {
                        "default": "taken from the current value",
                        "name": "Ehi",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "taken from the current value",
                        "name": "Weight",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "taken from the current value",
                        "name": "Junk",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "reset": {
                "guidance": "Reset (clean) the histogram",
                "params": [
                    {
                        "default": "energy",
                        "name": "HistType",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "type": {
                "guidance": "Sets histogram type",
                "params": [
                    {
                        "default": "biasx",
                        "name": "HistType",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "ion": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gps/ion Z A Q E\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nE:(double) Excitation energy (in keV)",
            "params": [
                {
                    "default": "1",
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0.0",
                    "name": "E",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "ionLvl": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gps/ion Z A Q Lvl\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nLvl:(int) Number of metastable state excitation level (0-9)",
            "params": [
                {
                    "default": "1",
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0.0",
                    "name": "Lvl",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "number": {
            "guidance": "Set number of particles to be generated per vertex.\nRange of parameters : N>0",
            "params": [
                {
                    "name": "N",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "particle": {
            "guidance": "Set particle to be generated.\n(geantino is default)\n(ion can be specified for shooting ions)",
            "params": [
                {
                    "default": "geantino",
                    "name": "particleName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "polarization": {
            "guidance": "Set polarization.\nRange of parameters : Px>=-1.&&Px<=1.&&Py>=-1.&&Py<=1.&&Pz>=-1.&&Pz<=1.",
            "params": [
                {
                    "name": "Px",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Py",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Pz",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "pos": {
            "centre": {
                "guidance": "Set centre coordinates of source.",
                "params": [
                    {
                        "name": "X",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Z",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "confine": {
                "guidance": "Confine source to volume (NULL to unset).\nusage: confine VolName",
                "params": [
                    {
                        "default": "NULL",
                        "name": "VolName",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "halfx": {
                "guidance": "Set x half length of source.",
                "params": [
                    {
                        "name": "Halfx",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "halfy": {
                "guidance": "Set y half length of source.",
                "params": [
                    {
                        "name": "Halfy",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "halfz": {
                "guidance": "Set z half length of source.",
                "params": [
                    {
                        "name": "Halfz",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "inner_radius": {
                "guidance": "Set inner radius of source when required.",
                "params": [
                    {
                        "name": "Radius0",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "paralp": {
                "guidance": "Angle from y-axis of y' in Para",
                "params": [
                    {
                        "name": "paralp",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "parphi": {
                "guidance": "Azimuth angle through centres of z faces",
                "params": [
                    {
                        "name": "parphi",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "parthe": {
                "guidance": "Polar angle through centres of z faces",
                "params": [
                    {
                        "name": "parthe",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "radius": {
                "guidance": "Set radius of source.",
                "params": [
                    {
                        "name": "Radius",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "rot1": {
                "guidance": "Set the 1st vector defining the rotation matrix'.\nIt does not need to be a unit vector.\nRange of parameters : R1x != 0 || R1y != 0 || R1z != 0",
                "params": [
                    {
                        "name": "R1x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R1y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R1z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "rot2": {
                "guidance": "Set the 2nd vector defining the rotation matrix'.\nIt does not need to be a unit vector.\nRange of parameters : R2x != 0 || R2y != 0 || R2z != 0",
                "params": [
                    {
                        "name": "R2x",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R2y",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "R2z",
                        "omit": "False",
                        "type": "d"
                    }
                ]
            },
            "shape": {
                "guidance": "Sets source shape for Plan, Surface or Volume type source.",
                "params": [
                    {
                        "default": "NULL",
                        "name": "Shape",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "sigma_r": {
                "guidance": "Set standard deviation in radial of the beam positional profile\napplicable to Beam type source only",
                "params": [
                    {
                        "name": "Sigmar",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sigma_x": {
                "guidance": "Set standard deviation of beam positional profile in x-dir\napplicable to Beam type source only",
                "params": [
                    {
                        "name": "Sigmax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "sigma_y": {
                "guidance": "Set standard deviation of beam positional profile in y-dir\napplicable to Beam type source only",
                "params": [
                    {
                        "name": "Sigmay",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "cm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "type": {
                "guidance": "Sets source distribution type.\nEither Point, Beam, Plane, Surface or Volume",
                "params": [
                    {
                        "default": "Point",
                        "name": "DisType",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "position": {
            "guidance": "Set starting position of the particle for a Point like source.\nSame effect as the two /gps/pos/type Point /gps/pos/centre commands.",
            "params": [
                {
                    "name": "X",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Y",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "time": {
            "guidance": "Set initial time of the particle.",
            "params": [
                {
                    "name": "t0",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "ns",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level for GPS\n0 : Silent\n1 : Limited information\n2 : Detailed information\nRange of parameters : level>=0 && level <=2",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "gui": {
        "addButton": {
            "guidance": "Add a button to menu.",
            "params": [
                {
                    "default": "dummy",
                    "name": "Menu",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "dummy",
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "Command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "addIcon": {
            "guidance": "Add a non-checkable icon to the Icon toolbar.\nIf the Icon parameter is set to \"user_icon\", you should provide the icon file in xpm format, otherwise you have to choose one of the candidate icons\nA command given without parameters will display a window that will allow one to choose the parameters (if needed) for this command.\nE.g: /gui/addIcon \"Change background color\" user_icon /vis/viewer/set/background ../Images/background.xpm\nSpecial cases for the Icon parameter:\n- open: Open an open-file-selector that can run the Command with File as argument.\n- save: Open a save-file-selector that can run the Command with File as argument.\n- move/rotate/pick/zoom_in/zoom_out: Theses icons are radio-button icons that can change cursor action.\n- wireframe/solid/hidden_line_removal/hidden_line_and_surface_removal: These icons are radio-button icons that can change drawing style.\n- perspective/ortho: These icons are radio-button icons that can change projection style.",
            "params": [
                {
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "Icon",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "no_command",
                    "name": "Command",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "no_file",
                    "name": "File",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "addMenu": {
            "guidance": "Add a menu to menu bar.",
            "params": [
                {
                    "default": "dummy",
                    "name": "Name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "dummy",
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "system": {
            "guidance": "Send a command to the system.",
            "params": [
                {
                    "name": "Command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "heptst": {
        "processAbsLevel": {
            "guidance": "Set absolute energy level (with unit) of allowed energy non-conservation",
            "params": [
                {
                    "default": "-1",
                    "name": "ProcessAbsLevel",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "name": "Unit",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "processRelLevel": {
            "guidance": "Set relative level of allowed energy non-conservation",
            "params": [
                {
                    "default": "-1",
                    "name": "ProcessRelLevel",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "reportLevel": {
            "guidance": "Set level of detail reported upon E/p non-conservation\n0 - (default) no reporting\n1 - report only when E/p not conserved\n2 - report regardless of E/p conservation\n3 - report only when E/p not conserved, with names, limits\n4 - report regardless of E/p conservation, with names, limits\nRange of parameters : ReportLevel >= 0 && ReportLevel < 5",
            "params": [
                {
                    "default": "0",
                    "name": "ReportLevel",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "material": {
        "g4": {
            "printDensityEffParam": {
                "guidance": "print Material from G4DensityEffectData.\nall - all materials",
                "params": [
                    {
                        "default": "all",
                        "name": "dmat",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printElement": {
                "guidance": "print Element from G4ElementTable.\nall - all elements.",
                "params": [
                    {
                        "default": "all",
                        "name": "elm",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printMaterial": {
                "guidance": "print Material from G4MaterialTable.\nall - all materials",
                "params": [
                    {
                        "default": "all",
                        "name": "pmat",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "verbose": {
            "guidance": "Set verbose level.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "monitoring": {
        "enabled": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "eventLogFrequency": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "particle": {
        "createAllIon": {
            "guidance": "Create All ions (ground state)",
            "params": []
        },
        "createAllIsomer": {
            "guidance": "Create All isomers",
            "params": []
        },
        "find": {
            "guidance": "Find particle by encoding",
            "params": [
                {
                    "default": "0",
                    "name": "encoding",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "list": {
            "guidance": "List name of particles.\nall(default)/lepton/baryon/meson/nucleus/quarks",
            "params": [
                {
                    "default": "all",
                    "name": "particle type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "process": {
            "activate": {
                "guidance": "Activate process\nActivate [process index]\nRange of parameters : index >=0",
                "params": [
                    {
                        "default": "0",
                        "name": "index",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "dump": {
                "guidance": "dump process manager or process information\ndump [process index]\nprocess index: -1 for process manager",
                "params": [
                    {
                        "default": "-1",
                        "name": "index",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "inactivate": {
                "guidance": "Inactivate process\ninactivate [process index]\nRange of parameters : index >=0",
                "params": [
                    {
                        "default": "0",
                        "name": "index",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "verbose": {
                "guidance": "Set Verbose Level for Process or Process Manager\nVerbose [Verbose] [process index]\nprocess index: -1 for process manager",
                "params": [
                    {
                        "default": "1",
                        "name": "Verbose",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "-1",
                        "name": "index",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "property": {
            "decay": {
                "br": {
                    "guidance": "Set branching ratio. [0< BR <1.0]\nRange of parameters : (br >=0.0) && (br <=1.0)",
                    "params": [
                        {
                            "name": "br",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "dump": {
                    "guidance": "Dump decay mode information.",
                    "params": []
                },
                "select": {
                    "guidance": "Enter index of decay mode.\nRange of parameters : mode >=0",
                    "params": [
                        {
                            "default": "0",
                            "name": "mode",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                }
            }
        },
        "select": {
            "guidance": "Select particle",
            "params": [
                {
                    "default": "none",
                    "name": "particle name",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level of particle table.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more\nRange of parameters : verbose_level >=0",
            "params": [
                {
                    "default": "0",
                    "name": "verbose_level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "particleWriter": {
        "addVirtualPlaneX": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "addVirtualPlaneY": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "addVirtualPlaneZ": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "cacheCapacity": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "clearFilters": {
            "guidance": "",
            "params": []
        },
        "enabled": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "kill": {
            "guidance": "Kill all particles fulfilling specified conditions.",
            "params": [
                {
                    "name": "volume",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "when",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "precision": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "removeAllVirtualPlanes": {
            "guidance": "",
            "params": []
        },
        "removeVirtualPlane": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "separator": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "write": {
            "guidance": "Store information about all particles fulfilling specified conditions",
            "params": [
                {
                    "name": "volume",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "when",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "path",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "writeAndKill": {
            "guidance": "Store information about all particles fulfilling specified conditions and then kill them.",
            "params": [
                {
                    "name": "volume",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "when",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "path",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        }
    },
    "physics": {
        "enableDecay": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "enableEmExtra": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "enableIonBinaryCascade": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "enableNeutronTrackingCut": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "enableRadioactiveDecay": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "enableStepLimiter": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "enableStopping": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "",
            "params": []
        },
        "setEm": {
            "guidance": "Select the constructor for EM physics",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setHadron": {
            "guidance": "Select the constructor for hadron physics",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setHadronElastic": {
            "guidance": "Select the constructor for hadron elastic physics",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "useReference": {
            "guidance": "Use a reference physics list. This disables most of the other options.",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "physics_engine": {
        "neutron": {
            "energyLimit": {
                "guidance": "Set tracking cut - min energy of a particle.",
                "params": [
                    {
                        "name": "energyLimit",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "timeLimit": {
                "guidance": "Set time limit.",
                "params": [
                    {
                        "name": "timeLimit",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        }
    },
    "physics_lists": {
        "em": {
            "GammaNuclear": {
                "guidance": "Switching on gamma nuclear physics.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "MuonNuclear": {
                "guidance": "Switching on muon nuclear physics.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "SyncRadiation": {
                "guidance": "Switching on/off synchrotron radiation.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "SyncRadiationAll": {
                "guidance": "Switching on/off synchrotron radiation for all charged.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            }
        }
    },
    "process": {
        "activate": {
            "guidance": "Activate processes\nActivate  name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "dump": {
            "guidance": "Dump process information\ndump name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "eLoss": {
            "CSDARange": {
                "guidance": "Enable/disable CSDA range calculation",
                "params": [
                    {
                        "default": "0",
                        "name": "range",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "LPM": {
                "guidance": "Enable/disable LPM effect calculation",
                "params": [
                    {
                        "default": "1",
                        "name": "lpm",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "LambdaFactor": {
                "guidance": "Set lambdaFactor parameter for integral option",
                "params": [
                    {
                        "name": "Fl",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "StepFunction": {
                "guidance": "Set the energy loss step limitation parameters.\ndRoverR   : max Range variation per step\nfinalRange: range for final step",
                "params": [
                    {
                        "name": "dRoverR",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "finalRange",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "UseAngularGenerator": {
                "guidance": "Enable usage of angular generator",
                "params": [
                    {
                        "default": "0",
                        "name": "del",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "binsDEDX": {
                "guidance": "Set number of bins for EM tables",
                "params": [
                    {
                        "default": "77",
                        "name": "binsDEDX",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "binsLambda": {
                "guidance": "Set number of bins for EM tables",
                "params": [
                    {
                        "default": "77",
                        "name": "binsL",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "binsPerDecade": {
                "guidance": "Set number of bins per decade for EM tables",
                "params": [
                    {
                        "default": "7",
                        "name": "bins",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "bremThreshold": {
                "guidance": "Set bremsstrahlung energy threshold",
                "params": [
                    {
                        "name": "emaxBrem",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "fluct": {
                "guidance": "Enable/disable energy loss fluctuations.",
                "params": [
                    {
                        "default": "1",
                        "name": "choice",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "integral": {
                "guidance": "Switch true/false the integral option",
                "params": [
                    {
                        "default": "1",
                        "name": "integ",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "linLossLimit": {
                "guidance": "Set linearLossLimit parameter",
                "params": [
                    {
                        "name": "linlim",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "maxKinEnergy": {
                "guidance": "Set the max kinetic energy for EM tables",
                "params": [
                    {
                        "name": "emax",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "maxKinEnergyCSDA": {
                "guidance": "Set the max kinetic energy for CSDA table",
                "params": [
                    {
                        "name": "emaxCSDA",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "minKinEnergy": {
                "guidance": "Set the min kinetic energy for EM tables",
                "params": [
                    {
                        "name": "emin",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "minsubsec": {
                "guidance": "Set the ratio subcut/cut",
                "params": [
                    {
                        "name": "rcmin",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "subsec": {
                "guidance": "Switch true/false the subcutoff generation.",
                "params": [
                    {
                        "default": "1",
                        "name": "choice",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "useCutAsFinalRange": {
                "guidance": "Enable?disable use of cut in range as a final range",
                "params": [
                    {
                        "default": "0",
                        "name": "choice",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "verbose": {
                "guidance": "Set verbose level for EM physics",
                "params": [
                    {
                        "default": "1",
                        "name": "verb",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "inactivate": {
            "guidance": "Inactivate process\nInactivate processes\nInactivate  name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "List up process names\nlist [type]\ntype: process type [all:for all proceeses]",
            "params": [
                {
                    "default": "all",
                    "name": "type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "msc": {
            "DisplacementBeyondSafety": {
                "guidance": "Enable/disable displacement at geometry boundary",
                "params": [
                    {
                        "default": "0",
                        "name": "cat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "FactorForAngleLimit": {
                "guidance": "Set factor for computation of a limit for -t (invariant trasfer)\nRange of parameters : Fact>0",
                "params": [
                    {
                        "default": "1",
                        "name": "Fact",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "GeomFactor": {
                "guidance": "Set GeomFactor parameter for msc processes\nRange of parameters : Fg>0",
                "params": [
                    {
                        "default": "3.5",
                        "name": "Fg",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "LateralDisplacement": {
                "guidance": "Enable/disable sampling of lateral displacement",
                "params": [
                    {
                        "default": "1",
                        "name": "lat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "MuHadLateralDisplacement": {
                "guidance": "Enable/disable sampling of lateral displacement for muons and hadrons",
                "params": [
                    {
                        "default": "1",
                        "name": "mulat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "RangeFactor": {
                "guidance": "Set RangeFactor for msc processes of e+-\nRange of parameters : Fr>0",
                "params": [
                    {
                        "default": "0.04",
                        "name": "Fr",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "RangeFactorMuHad": {
                "guidance": "Set RangeFactor for msc processes of muons/hadrons\nRange of parameters : Fr>0",
                "params": [
                    {
                        "default": "0.2",
                        "name": "Fr1",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "Skin": {
                "guidance": "Set skin parameter for msc processes",
                "params": [
                    {
                        "name": "skin",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "StepLimit": {
                "guidance": "Set msc step limitation type",
                "params": [
                    {
                        "name": "StepLim",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "StepLimitMuHad": {
                "guidance": "Set msc step limitation type for muons/hadrons",
                "params": [
                    {
                        "name": "StepLim1",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "ThetaLimit": {
                "guidance": "Set the limit on the polar angle for msc and single scattering",
                "params": [
                    {
                        "name": "theta",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "UseMottCorrection": {
                "guidance": "Enable usage of Mott corrections for e- elastic scattering",
                "params": [
                    {
                        "default": "0",
                        "name": "mott",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        },
        "setVerbose": {
            "guidance": "Set verbose level for processes\nsetVerbose level [type or name]\nlevel: verbose level\nname : process name\ntype : process type\n[all] for all proceeses",
            "params": [
                {
                    "name": "verbose",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "all",
                    "name": "type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose Level for Process Table\nverbose [level]\nlevel: verbose level\nRange of parameters : verbose >=0",
            "params": [
                {
                    "default": "1",
                    "name": "verbose",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "random": {
        "resetEngineFrom": {
            "guidance": "Reset the status of the rndm engine from a file.\nSee CLHEP manual for detail.\nThe engine status must be stored beforehand.\nDirectory of the status file should be set by /random/setDirectoryName.",
            "params": [
                {
                    "default": "currentRun.rndm",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "resetEngineFromEachEvent": {
            "guidance": "Reset the status of the rndm engine from a file at each event.\nNote that the file must follow the following naming convention:\nrun{#1}evt{#2}.rndm ; where #1 is the run number and #2 is the event number.\nFor example to re-seed the first event of the first run the file should be called run0evt0.rndm.\nIf for a specific run/event the file is not found, the standard re-seeding strategy is used.\nThis command has meaning only in MT mode for strong reproducibility studies.\nDirectory of the status file should be set by /random/setDirectoryName.",
            "params": [
                {
                    "default": "0",
                    "name": "",
                    "omit": "False",
                    "type": "b"
                }
            ]
        },
        "saveEachEventFlag": {
            "guidance": "Save random number status at beginning of each event.\nFile name contains run and event numbers: runXXXevtYYY.rndm",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "saveThisEvent": {
            "guidance": "copy currentEvent.rndm to runXXXevtYYY.rndm",
            "params": []
        },
        "saveThisRun": {
            "guidance": "copy currentRun.rndm to runXXX.rndm",
            "params": []
        },
        "setDirectoryName": {
            "guidance": "Define the directory name of the rndm status files.\nDirectory will be created if it does not exist.",
            "params": [
                {
                    "default": "./",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setSavingFlag": {
            "guidance": "The randomNumberStatus will be saved at :\nbegining of run (currentRun.rndm) and begining of event (currentEvent.rndm)",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "setSeeds": {
            "guidance": "Initialize the random number generator with integer seed stream.\nNumber of integers should be more than 1.\nActual number of integers to be used depends on the individual random number engine.\nThis command sets the seeds for the master thread.",
            "params": [
                {
                    "name": "IntArray",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "run": {
        "abort": {
            "guidance": "Abort current run processing.\nIf softAbort is false (default), currently processing event will be immediately aborted,\nwhile softAbort is true, abortion occurs after processing the current event.",
            "params": [
                {
                    "default": "0",
                    "name": "softAbort",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "abortCurrentEvent": {
            "guidance": "Abort currently processing event.",
            "params": []
        },
        "beamOn": {
            "guidance": "Start a Run.\nIf G4 kernel is not initialized, it will be initialized.\nDefault number of events to be processed is 1.\nThe second and third arguments can be used for\nexecuting a macro file at the end of each event.\nIf the second argument, i.e. name of the macro\nfile, is given but the third argument is not,\nthe macro file will be executed for all of the\nevent.\nIf the third argument (nSelect) is given, the\nmacro file will be executed only for the first\nnSelect events.",
            "params": [
                {
                    "default": "1",
                    "name": "numberOfEvent",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "***NULL***",
                    "name": "macroFile",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "-1",
                    "name": "nSelect",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "breakAtBeginOfEvent": {
            "guidance": "Set a break point at the begining of every event.",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "breakAtEndOfEvent": {
            "guidance": "Set a break point at the end of every event.",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "constructScoringWorlds": {
            "guidance": "Constrct scoring parallel world(s) if defined.\nThis command is not mandatory, but automatically called when a run starts.\nBut the user may use this to visualize the scoring world(s) before a run to start.",
            "params": []
        },
        "dumpCouples": {
            "guidance": "Dump material-cuts-couple information.\nNote that material-cuts-couple information is updated\nafter BeamOn has started.",
            "params": []
        },
        "dumpRegion": {
            "guidance": "Dump region information.\nIn case name of a region is not given, all regions will be displayed.",
            "params": [
                {
                    "default": "**ALL**",
                    "name": "regionName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "eventModulo": {
            "guidance": "Set the event modulo for dispatching events to worker threads\ni.e. each worker thread is ordered to simulate N events and then\ncomes back to G4MTRunManager for next set.\nIf it is set to zero (default value), N is roughly given by this.\nN = int( sqrt( number_of_events / number_of_threads ) )\nThe value N may affect on the computing performance in particular\nif N is too small compared to the total number of events.\nThe second parameter seedOnce specifies how frequently each worker\nthread is seeded by the random number sequence contrally managed\nby the master G4MTRunManager.\n- If seedOnce is set to 0 (default), seeds that are centrally managed\nby G4MTRunManager are set for every event of every worker thread.\nThis option guarantees event reproducability regardless of number\nof threads.\n- If seedOnce is set to 1, seeds are set only once for the first\nevent of each run of each worker thread. Event reproducability is\nguaranteed only if the same number of worker threads are used.\nOn the other hand, this option offers better computing performance\nin particular for applications with relatively small primary\nparticle energy and large number of events.\n- If seedOnce is set to 2, seeds are set only for the first event of\ngroup of N events. This option is reserved for the future use when\nGeant4 allows number of threads to be dynatically changed during an\nevent loop.\nThis command is valid only for multi-threaded mode.\nThis command is ignored if it is issued in sequential mode.",
            "params": [
                {
                    "default": "0",
                    "name": "N",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "seedOnce",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "geometryModified": {
            "guidance": "Force geometry to be closed (re-voxellized) again.\nThis command must be applied if geometry has been modified\nafter the first initialization (or BeamOn).",
            "params": []
        },
        "getCutForAGivenParticle": {
            "guidance": "Get a cut value to a specific particle\nUsage: /run/getCutForAGivenParticle  gamma",
            "params": [
                {
                    "name": "particleName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "initialize": {
            "guidance": "Initialize G4 kernel.",
            "params": []
        },
        "numberOfThreads": {
            "guidance": "Set the number of threads to be used.\nThis command works only in PreInit state.\nThis command is valid only for multi-threaded mode.\nThe command is ignored if it is issued in sequential mode.\nRange of parameters : nThreads >0",
            "params": [
                {
                    "default": "2",
                    "name": "nThreads",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "optimizeGeometry": {
            "guidance": "Set the optimization flag for geometry.\nIf it is set to TRUE, G4GeometryManager will optimize\nthe geometry definitions.\nGEANT4 is initialized with this flag as TRUE.",
            "params": [
                {
                    "default": "1",
                    "name": "optimizeFlag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "physicsModified": {
            "guidance": "Force all physics tables recalculated again.\nThis command must be applied\nif physics process has been modified after the\nfirst initialization (or BeamOn).",
            "params": []
        },
        "pinAffinity": {
            "guidance": "Locks each thread to a specific logical core. Workers are locked in round robin to logical cores.\nThis command is valid only for multi-threaded mode.\nThis command works only in PreInit state.\nThis command is ignored if it is issued in sequential mode.\nIf a value n>0 is provided it starts setting affinity from the n-th CPU (note: counting from 1).\nE.g. /run/pinAffinity 3 locks first thread on third logical CPU (number 2).\nIf a value n<0 is provided never locks on n-th CPU.\nRange of parameters : pinAffinity > 0 || pinAffinity < 0",
            "params": [
                {
                    "default": "1",
                    "name": "pinAffinity",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "printProgress": {
            "guidance": "Display begin_of_event information at given frequency.\nIf it is set to zero, only the begin_of_run is shown.\nIf it is set to -1, no print-out is shown.\nRange of parameters : mod>=-1",
            "params": [
                {
                    "default": "-1",
                    "name": "mod",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "reinitializeGeometry": {
            "guidance": "Force geometry to be rebuilt once again.\nThis command must be applied if the user needs his/her\ndetector construction to be reinvoked.\n/run/geometryModified is automatically issued with this command.",
            "params": [
                {
                    "default": "0",
                    "name": "destroyFirst",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "setCut": {
            "guidance": "Set default cut value\nRange of parameters : cut >=0.0",
            "params": [
                {
                    "default": "1",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setCutForAGivenParticle": {
            "guidance": "Set a cut value to a specific particle\nUsage: /run/setCutForAGivenParticle  gamma  1. mm",
            "params": [
                {
                    "name": "particleName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "1.",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "unit",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setCutForRegion": {
            "guidance": "Set cut value for a region",
            "params": [
                {
                    "name": "Region",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "storeRndmStatToEvent": {
            "guidance": "Flag to store rndm status to G4Event object.\nflag = 0 : not store (default)\nflag = 1 : status before primary particle generation is stored\nflag = 2 : status before event processing (after primary particle generation) is stored\nflag = 3 : both are stored\nNote: Some performance overhead may be seen by storing rndm status, in particular\nfor the case of simplest geometry and small number of tracks per event.\nRange of parameters : flag>=0 && flag<3",
            "params": [
                {
                    "default": "0",
                    "name": "flag",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "useMaximumLogicalCores": {
            "guidance": "Set the number of threads to be the number of available logical cores.\nThis command works only in PreInit state.\nThis command is valid only for multi-threaded mode.\nThe command is ignored if it is issued in sequential mode.",
            "params": []
        },
        "verbose": {
            "guidance": "Set the Verbose level of G4RunManager.\n0 : Silent (default)\n1 : Display main topics\n2 : Display main topics and run summary\nRange of parameters : level >=0 && level <=2",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "score": {
        "close": {
            "guidance": "Close scoring mesh.",
            "params": []
        },
        "drawColumn": {
            "guidance": "Draw a cell column.\nplane = 0 : x-y, 1: y-z, 2: z-x  for box mesh\n0 : z-phi, 1: r-phi, 2: r-z  for cylinder mesh",
            "params": [
                {
                    "name": "meshName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "psName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "plane",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "column",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "defaultLinearColorMap",
                    "name": "colorMapName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawProjection": {
            "guidance": "Draw projection(s) of scored quantities.\nParameter <proj> specified which projection(s) to be drawn.\n100 : xy-plane, 010 : yz-plane,    001 : zx-plane -- default 111\n100 : N/A,      010 : z_phi-plane, 001 : r_phi-plane -- default 111",
            "params": [
                {
                    "name": "meshName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "psName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "defaultLinearColorMap",
                    "name": "colorMapName",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "111",
                    "name": "proj",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "dump": {
            "guidance": "Dump results of scorers.",
            "params": []
        },
        "dumpAllQuantitiesToFile": {
            "guidance": "Dump all quantities of the mesh to file.",
            "params": [
                {
                    "name": "meshName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "fileName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "option",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "dumpQuantityToFile": {
            "guidance": "Dump one scored quantity to file.",
            "params": [
                {
                    "name": "meshName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "psName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "fileName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "option",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "List scoring worlds.",
            "params": []
        },
        "open": {
            "guidance": "Open scoring mesh.",
            "params": [
                {
                    "name": "MeshName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Verbosity.\n0) errors or warnings,\n1) information with 0)",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "scorerWriter": {
        "enabled": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "precision": {
            "guidance": "Number of digits to write to output file.",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "source": {
        "energy": {
            "angleSampling": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "energyMean": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "MeV",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "energyRangePercent": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "halfAngle": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "rad",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "path": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "energyAngle": {
            "angleBinPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "energyBinPath": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "energyMean": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "MeV",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "energyRangePercent": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "particle": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "position": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "selectEnergyBins": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "memory": {
            "beamOn": {
                "guidance": "",
                "params": []
            },
            "multiplicity": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "name": {
                "guidance": "Set name of the data exported by ParticleWriter.",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "particleList": {
            "beamOn": {
                "guidance": "",
                "params": []
            },
            "energyGaussRelativeSigma": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "energyGaussSigma": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "MeV",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "maxEnergy": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "MeV",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "minEnergy": {
                "guidance": "",
                "params": [
                    {
                        "name": "value",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "MeV",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "multiplicity": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "path": {
                "guidance": "Set path to the phase space file.",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "pxGaussSigma": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "pyGaussSigma": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "reload": {
                "guidance": "",
                "params": []
            },
            "verbose": {
                "guidance": "",
                "params": [
                    {
                        "name": "arg",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            }
        },
        "type": {
            "guidance": "Select particle source type",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "tracking": {
        "abort": {
            "guidance": "Abort current G4Track processing.",
            "params": []
        },
        "resume": {
            "guidance": "Resume current G4Track processing.",
            "params": []
        },
        "storeTrajectory": {
            "guidance": "Store trajectories or not.\n0 : Don't Store trajectories.\n!=0 : Store trajectories.\n1 : Choose G4Trajectory as default.\n2 : Choose G4SmoothTrajectory as default.\n3 : Choose G4RichTrajectory as default.\n4 : Choose G4RichTrajectory with auxiliary points as default.\nRange of parameters : Store >=0 && Store <= 4",
            "params": [
                {
                    "default": "0",
                    "name": "Store",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level of tracking category.\n-1 : Silent.\n0 : Silent.\n1 : Minium information of each Step.\n2 : Addition to Level=1, info of secondary particles.\n3 : Addition to Level=1, pre/postStepoint information\nafter all AlongStep/PostStep process executions.\n4 : Addition to Level=3, pre/postStepoint information\nat each AlongStepPostStep process execuation.\n5 : Addition to Level=4, proposed Step length information\nfrom each AlongStepPostStep process.\nRange of parameters : verbose_level >=-1",
            "params": [
                {
                    "default": "0",
                    "name": "verbose_level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "units": {
        "list": {
            "guidance": "full list of available units.",
            "params": []
        }
    },
    "vis": {
        "ASCIITree": {
            "set": {
                "outFile": {
                    "guidance": "Set name of output file.",
                    "params": [
                        {
                            "default": "G4cout",
                            "name": "out-filename",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                }
            }
        },
        "abortReviewKeptEvents": {
            "guidance": "Abort review of kept events.",
            "params": [
                {
                    "default": "1",
                    "name": "abort",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "disable": {
            "guidance": "Disables visualization system.",
            "params": []
        },
        "drawTree": {
            "guidance": "(DTREE) Creates a scene consisting of this physical volume and\n  produces a representation of the geometry hieracrhy.\nThe scene becomes current.",
            "params": [
                {
                    "default": "world",
                    "name": "physical-volume-name",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "ATree",
                    "name": "system",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawView": {
            "guidance": "Draw view from this angle, etc.",
            "params": [
                {
                    "default": "0",
                    "name": "theta-degrees",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "phi-degrees",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "pan-right",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "pan-up",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "pan-unit",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "1",
                    "name": "zoom-factor",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "dolly",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "dolly-unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawVolume": {
            "guidance": "Creates a scene containing this physical volume and asks the\ncurrent viewer to draw it.  The scene becomes current.\nIf physical-volume-name is \"world\" (the default), the main geometry\ntree (material world) is drawn.  If \"worlds\", all worlds - material\nworld and parallel worlds, if any - are drawn.  Otherwise a search of\nall worlds is made, taking the first matching occurence only.  To see\na representation of the geometry hierarchy of the worlds, try\n\"/vis/drawTree [worlds]\" or one of the driver/browser combinations\nthat have the required functionality, e.g., HepRep",
            "params": [
                {
                    "default": "world",
                    "name": "physical-volume-name",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "enable": {
            "guidance": "Enables/disables visualization system.",
            "params": [
                {
                    "default": "1",
                    "name": "enabled",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "initialize": {
            "guidance": "Initialise visualisation manager.",
            "params": []
        },
        "list": {
            "guidance": "Lists visualization parameters.",
            "params": [
                {
                    "default": "warnings",
                    "name": "verbosity",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "modeling": {
            "trajectories": {
                "create": {
                    "drawByAttribute": {
                        "guidance": "Create a drawByAttribute model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "drawByCharge": {
                        "guidance": "Create a drawByCharge model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "drawByOriginVolume": {
                        "guidance": "Create a drawByOriginVolume model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "drawByParticleID": {
                        "guidance": "Create a drawByParticleID model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "generic": {
                        "guidance": "Create a generic model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    }
                }
            }
        },
        "multithreading": {
            "actionOnEventQueueFull": {
                "guidance": "When event queue for drawing gets full:\nwait: event processing waits for vis manager to catch up.\ndiscard: events are discarded for drawing.",
                "params": [
                    {
                        "default": "wait",
                        "name": "wait",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "maxEventQueueSize": {
                "guidance": "Defines maximum event queue size. N <=0 means \"unlimited\".\nIf adding an event to the visualisation event queue would cause the queue size to exceed this value:\nif actionOnEventQueueFull==wait the worker threads are paused for a short time to give the visualisation manager a chance to catch up.\nif actionOnEventQueueFull==discard the event is discarded for drawing.",
                "params": [
                    {
                        "default": "100",
                        "name": "maxSize",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "open": {
            "guidance": "Creates a scene handler ready for drawing.\nThe scene handler becomes current (the name is auto-generated).",
            "params": [
                {
                    "name": "graphics-system-name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "600",
                    "name": "window-size-hint",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "rayTracer": {
            "attenuation": {
                "guidance": "Define the attenuation length for transparent material.\nNote that this value is independent to the attenuation length for the optical photon processes.\nRange of parameters : Length > 0.",
                "params": [
                    {
                        "default": "1",
                        "name": "Length",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "m",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "backgroundColour": {
                "guidance": "Command has been deprecated.  Use /vis/viewer/set/background instead.",
                "params": [
                    {
                        "default": "1",
                        "name": "red",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "green",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "blue",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "column": {
                "guidance": "Define the number of horizontal pixels.\nRange of parameters : nPixel > 0",
                "params": [
                    {
                        "name": "nPixel",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "distortion": {
                "guidance": "Distortion effect of the fish eye lens.",
                "params": [
                    {
                        "default": "0",
                        "name": "flag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "eyePosition": {
                "guidance": "Define the eye position.\nEye direction is calsurated from (target - eyePosition).",
                "params": [
                    {
                        "default": "0",
                        "name": "X",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "Y",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "Z",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "m",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "headAngle": {
                "guidance": "Define the head direction.\nRange of parameters : headAngle>=0. && headAngle<360.",
                "params": [
                    {
                        "default": "270",
                        "name": "headAngle",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "deg",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "ignoreTransparency": {
                "guidance": "Ignore transparency even if the alpha of G4Colour < 1.",
                "params": [
                    {
                        "default": "0",
                        "name": "flag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "lightDirection": {
                "guidance": "Define the direction of illumination light.\nThe vector needs not to be a unit vector, but it must not be a zero vector.\nRange of parameters : Px != 0 || Py != 0 || Pz != 0",
                "params": [
                    {
                        "default": "0.1",
                        "name": "Px",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0.2",
                        "name": "Py",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0.3",
                        "name": "Pz",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "row": {
                "guidance": "Define the number of virtical pixels.\nRange of parameters : nPixel > 0",
                "params": [
                    {
                        "name": "nPixel",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "span": {
                "guidance": "Define the angle per 100 pixels.\nRange of parameters : span>0.",
                "params": [
                    {
                        "default": "50",
                        "name": "span",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "deg",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "target": {
                "guidance": "Define the center position of the target.",
                "params": [
                    {
                        "default": "0",
                        "name": "X",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "Y",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "0",
                        "name": "Z",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "m",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "trace": {
                "guidance": "Start the ray tracing.\nDefine the name of output JPEG file.",
                "params": [
                    {
                        "default": "g4RayTracer.jpeg",
                        "name": "fileName",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "reviewKeptEvents": {
            "guidance": "Review kept events.\nIf a macro file is specified, it is executed for each event.\nIf a macro file is not specified, each event is drawn to the current\nviewer.  After each event, the session is paused.  The user may issue\nany allowed command.  Then enter \"cont[inue]\" to continue to the next\nevent.\nUseful commands might be:\n  \"/vis/viewer/...\" to change the view (zoom, set/viewpoint,...).\n  \"/vis/oglx/printEPS\" to get hard copy.\n  \"/vis/open\" to get alternative viewer.\n  \"/vis/abortReviewKeptEvents\", then \"cont[inue]\", to abort.",
            "params": [
                {
                    "name": "macro-file-name",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "specify": {
            "guidance": "Draws logical volume with Boolean components, voxels and readout geometry.\nCreates a scene consisting of this logical volume and asks the\n  current viewer to draw it to the specified depth of descent\n  showing boolean components (if any), voxels (if any)\n  and readout geometry (if any), under control of the appropriate flag.\nNote: voxels are not constructed until start of run - /run/beamOn.\nThe scene becomes current.",
            "params": [
                {
                    "name": "logical-volume-name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "1",
                    "name": "depth-of-descent",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "booleans-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "voxels-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "readout-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "axes-flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "verbose": {
            "guidance": "Simple graded message scheme - digit or string (1st character defines):\n0) quiet,          Nothing is printed.\n1) startup,        Startup and endup messages are printed...\n2) errors,         ...and errors...\n3) warnings,       ...and warnings...\n4) confirmations,  ...and confirming messages...\n5) parameters,     ...and parameters of scenes and views...\n6) all             ...and everything available.",
            "params": [
                {
                    "default": "warnings",
                    "name": "verbosity",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "viewer": {
            "default": {
                "hiddenEdge": {
                    "guidance": "Default hiddenEdge drawing for future viewers.\nEdges become hidden/seen in wireframe or surface mode.",
                    "params": [
                        {
                            "default": "1",
                            "name": "hidden-edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "style": {
                    "guidance": "Default drawing style for future viewers.\nSet style of drawing - w[ireframe] or s[urface].\n(Default hidden line drawing is controlled by \"/vis/viewer/default/hiddenEdge\".)",
                    "params": [
                        {
                            "name": "style",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                }
            },
            "set": {
                "all": {
                    "guidance": "Copies view parameters.\nCopies view parameters (except the autoRefresh status) from\nfrom-viewer to current viewer.",
                    "params": [
                        {
                            "name": "from-viewer-name",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "autoRefresh": {
                    "guidance": "Sets auto-refresh.\nIf true, view is automatically refreshed after a change of\nview parameters.",
                    "params": [
                        {
                            "default": "1",
                            "name": "auto-refresh",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "auxiliaryEdge": {
                    "guidance": "Sets visibility of auxiliary edges\nAuxiliary edges, i.e., those that are part of a curved surface,\nsometimes called soft edges, become visible/invisible.",
                    "params": [
                        {
                            "default": "1",
                            "name": "edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "background": {
                    "guidance": "Set background colour and transparency (default black and opaque).\nAccepts (a) RGB triplet. e.g., \".3 .4 .5\", or\n(b) string such as \"white\", \"black\", \"grey\", \"red\"...\n(c) an additional number for opacity, e.g., \".3 .4 .5 .6\"\n    or \"grey ! ! .6\" (note \"!\"'s for unused green and blue parameters),\n    e.g. \"! ! ! 0.\" for a transparent background.",
                    "params": [
                        {
                            "default": "0.",
                            "name": "red_or_string",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "culling": {
                    "guidance": "Set culling options.\n\"global\": enables/disables all other culling options.\n\"coveredDaughters\": culls, i.e., eliminates, volumes that would not\nbe seen because covered by ancester volumes in surface drawing mode,\nand then only if the ancesters are visible and opaque, and then only\nif no sections or cutaways are in operation.  Intended solely to\nimprove the speed of rendering visible volumes.\n\"invisible\": culls objects with the invisible attribute set.\n\"density\": culls volumes with density lower than threshold.  Useful\nfor eliminating \"container volumes\" with no physical correspondence,\nwhose material is usually air.  If this is selected, provide threshold\ndensity and unit (g/cm3 mg/cm3 or kg/m3).",
                    "params": [
                        {
                            "name": "culling-option",
                            "omit": "False",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "action",
                            "omit": "True",
                            "type": "b"
                        },
                        {
                            "default": "0.01",
                            "name": "density-threshold",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "g/cm3",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "cutawayMode": {
                    "guidance": "Sets cutaway mode - add (union) or multiply (intersection).",
                    "params": [
                        {
                            "default": "union",
                            "name": "cutaway-mode",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "defaultColour": {
                    "guidance": "Set defaultColour colour and transparency (default white and opaque).\nAccepts (a) RGB triplet. e.g., \".3 .4 .5\", or\n(b) string such as \"white\", \"black\", \"grey\", \"red\"...\n(c) an additional number for opacity, e.g., \".3 .4 .5 .6\"\n    or \"grey ! ! .6\" (note \"!\"'s for unused green and blue parameters),\n    e.g. \"! ! ! 0.\" for a transparent colour.",
                    "params": [
                        {
                            "default": "1.",
                            "name": "red_or_string",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "defaultTextColour": {
                    "guidance": "Set defaultTextColour colour and transparency (default white and opaque).\nAccepts (a) RGB triplet. e.g., \".3 .4 .5\", or\n(b) string such as \"white\", \"black\", \"grey\", \"red\"...\n(c) an additional number for opacity, e.g., \".3 .4 .5 .6\"\n    or \"grey ! ! .6\" (note \"!\"'s for unused green and blue parameters),\n    e.g. \"! ! ! 0.\" for a transparent colour.",
                    "params": [
                        {
                            "default": "1.",
                            "name": "red_or_string",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "edge": {
                    "guidance": "Edges become visible/invisible in surface mode.",
                    "params": [
                        {
                            "default": "1",
                            "name": "edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "explodeFactor": {
                    "guidance": "Moves top-level drawn volumes by this factor from this centre.",
                    "params": [
                        {
                            "default": "1",
                            "name": "explodeFactor",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "globalLineWidthScale": {
                    "guidance": "Multiplies line widths by this factor.",
                    "params": [
                        {
                            "default": "1",
                            "name": "scale-factor",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "globalMarkerScale": {
                    "guidance": "Multiplies marker sizes by this factor.",
                    "params": [
                        {
                            "default": "1",
                            "name": "scale-factor",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "hiddenEdge": {
                    "guidance": "Edges become hidden/seen in wireframe or surface mode.",
                    "params": [
                        {
                            "default": "1",
                            "name": "hidden-edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "hiddenMarker": {
                    "guidance": "If true, closer objects hide markers. Otherwise, markers always show.",
                    "params": [
                        {
                            "default": "1",
                            "name": "hidden-marker",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "lightsMove": {
                    "guidance": "Lights move with camera or with object",
                    "params": [
                        {
                            "name": "lightsMove",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "lightsThetaPhi": {
                    "guidance": "Set direction from target to lights.",
                    "params": [
                        {
                            "default": "60",
                            "name": "theta",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "45",
                            "name": "phi",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "lightsVector": {
                    "guidance": "Set direction from target to lights.",
                    "params": [
                        {
                            "default": "1",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "lineSegmentsPerCircle": {
                    "guidance": "Set number of sides per circle for polygon/polyhedron drawing.\nRefers to graphical representation of objects with curved lines/surfaces.",
                    "params": [
                        {
                            "default": "24",
                            "name": "line-segments",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                },
                "picking": {
                    "guidance": "Sets picking, if available.\nIf true, view is set up for picking, if available.\nYou may need to issue \"/vis/viewer/update\".\nFor required actions, watch for instructions for viewer.",
                    "params": [
                        {
                            "default": "1",
                            "name": "picking",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "projection": {
                    "guidance": "Set projection style - o[rthogonal] or p[erspective].\nIf p[erspective], also set field half angle.",
                    "params": [
                        {
                            "default": "orthogonal",
                            "name": "projection",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "30",
                            "name": "field-half-angle",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "rotationStyle": {
                    "guidance": "Set style of rotation - constrainUpDirection or freeRotation.\nconstrainUpDirection: conventional HEP view.\nfreeRotation: Google-like rotation, using mouse-grab.",
                    "params": [
                        {
                            "name": "style",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "sectionPlane": {
                    "guidance": "Set plane for drawing section (DCUT).\nE.g., for a y-z plane at x = 1 cm:\n\"/vis/viewer/set/sectionPlane on 1 0 0 cm 1 0 0\".\nTo turn off: /vis/viewer/set/sectionPlane off",
                    "params": [
                        {
                            "default": "on",
                            "name": "Selector",
                            "omit": "True",
                            "type": "c"
                        },
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "nx",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "ny",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "nz",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "style": {
                    "guidance": "Set style of drawing - w[ireframe] or s[urface].\n(Hidden line drawing is controlled by \"/vis/viewer/set/hiddenEdge\".)",
                    "params": [
                        {
                            "name": "style",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "targetPoint": {
                    "guidance": "Set target point.\nThis sets the \"Current Target Point\" relative to the \"Standard\nTarget Point\" so that the actual target point is as requested.\n(See G4ViewParameters.hh for an explanation of target points.)",
                    "params": [
                        {
                            "name": "x",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "z",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "Unit",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "upThetaPhi": {
                    "guidance": "Set up vector.\nViewer will attempt always to show this direction upwards.",
                    "params": [
                        {
                            "default": "90",
                            "name": "theta",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "90",
                            "name": "phi",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "upVector": {
                    "guidance": "Set up vector.\nViewer will attempt always to show this direction upwards.",
                    "params": [
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "viewpointThetaPhi": {
                    "guidance": "Set direction from target to camera.\nAlso changes lightpoint direction if lights are set to move with camera.",
                    "params": [
                        {
                            "default": "60",
                            "name": "theta",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "45",
                            "name": "phi",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "viewpointVector": {
                    "guidance": "Set direction from target to camera.\nAlso changes lightpoint direction if lights are set to move with camera.",
                    "params": [
                        {
                            "default": "1",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                }
            }
        }
    },
    "volumeTree": {
        "save": {
            "guidance": "",
            "params": [
                {
                    "name": "arg",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    }
}