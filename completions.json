{
    "analysis": {
        "compression": {
            "guidance": "Set compression level\nRange of parameters : CompressionLevel>=0 && CompressionLevel<=4",
            "params": [
                {
                    "name": "CompressionLevel",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "h1": {
            "create": {
                "guidance": "Create 1D histogram",
                "params": [
                    {
                        "name": "name",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "title",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "nbins0",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "0",
                        "name": "valMin0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "valMax0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme0",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "set": {
                "guidance": "Set parameters for the 1D histogram of given id:\nnbins; valMin; valMax; unit; function; binScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "nbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "valMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "valMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setActivation": {
                "guidance": "Set activation for the 1D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "hnActivation",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setActivationToAll": {
                "guidance": "Set activation to all 1D histograms",
                "params": [
                    {
                        "name": "Activation",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "setAscii": {
                "guidance": "Print 1D histogram of given id on ascii file.\nRange of parameters : id>=0",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "setPlotting": {
                "guidance": "(In)Activate batch plotting of the 1D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "hnPlotting",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setPlottingToAll": {
                "guidance": "(In)Activate batch plotting of all 1D histograms",
                "params": [
                    {
                        "name": "Plotting",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "setTitle": {
                "guidance": "Set title for the 1D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "title",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setX": {
                "guidance": "Set parameters for the 1D histogram of given id:\nnxbins; xvalMin; xvalMax; xunit; xfunction; xbinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "nbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "valMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "valMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setXaxis": {
                "guidance": "Set x-axis title for the 1D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setYaxis": {
                "guidance": "Set y-axis title for the 1D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "h2": {
            "create": {
                "guidance": "Create 2D histogram",
                "params": [
                    {
                        "name": "name",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "title",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "xnbins0",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "0",
                        "name": "xvalMin0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "xvalMax0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "xvalUnit0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "xvalFcn0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "xvalBinScheme0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "ynbins0",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "0",
                        "name": "yvalMin0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "yvalMax0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "yvalUnit0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "yvalFcn0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "yvalBinScheme0",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "set": {
                "guidance": "Set parameters for the 2D histogram of given id:\nnxbins; xvalMin; xvalMax; xunit; xfunction; xbinScheme\nnybins; yvalMin; yvalMax; yunit; yfunction; ybinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "xnbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "xvalMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "xvalMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "xvalUnit",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "xvalFcn",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "xvalBinScheme",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "name": "nybins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "yvalMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "yvalMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "yvalUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "yvalFcn",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "yvalBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setTitle": {
                "guidance": "Set title for the 2D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "title",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setX": {
                "guidance": "Set parameters for the 2D histogram of given id:\nnxbins; xvalMin; xvalMax; xunit; xfunction; xbinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "nbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "valMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "valMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setXaxis": {
                "guidance": "Set x-axis title for the 2D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setY": {
                "guidance": "Set parameters for the 2D histogram of given id:\nnybins; yvalMin; yvalMax; yunit; yfunction; ybinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "nbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "valMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "valMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setYaxis": {
                "guidance": "Set y-axis title for the 2D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setZaxis": {
                "guidance": "Set z-axis title for the 2D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "h3": {
            "create": {
                "guidance": "Create 3D histogram",
                "params": [
                    {
                        "name": "name",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "name": "title",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "xnbins0",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "0",
                        "name": "xvalMin0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "xvalMax0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "xvalUnit0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "xvalFcn0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "xvalBinScheme0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "ynbins0",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "0",
                        "name": "yvalMin0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "yvalMax0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "yvalUnit0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "yvalFcn0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "yvalBinScheme0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "100",
                        "name": "znbins0",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "0",
                        "name": "zvalMin0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "1",
                        "name": "zvalMax0",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "zvalUnit0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "zvalFcn0",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "zvalBinScheme0",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "set": {
                "guidance": "Set parameters for the 3D histogram of given id:\nnxbins; xvalMin; xvalMax; xunit; xfunction; xbinScheme\nnybins; yvalMin; yvalMax; yunit; yfunction; ybinScheme\nnzbins; zvalMin; zvalMax; zunit; zfunction; zbinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "xnbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "xvalMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "xvalMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "xvalUnit",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "xvalFcn",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "xvalBinScheme",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "name": "nybins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "yvalMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "yvalMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "yvalUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "yvalFcn",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "yvalBinScheme",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "name": "nzbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "zvalMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "zvalMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "zvalUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "zvalFcn",
                        "omit": "False",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "zvalBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setActivation": {
                "guidance": "Set activation for the 3D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "hnActivation",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setActivationToAll": {
                "guidance": "Set activation to all 3D histograms",
                "params": [
                    {
                        "name": "Activation",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "setAscii": {
                "guidance": "Print 3D histogram of given id on ascii file.\nRange of parameters : id>=0",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "setPlotting": {
                "guidance": "(In)Activate batch plotting of the 3D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "hnPlotting",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setPlottingToAll": {
                "guidance": "(In)Activate batch plotting of all 3D histograms",
                "params": [
                    {
                        "name": "Plotting",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "setTitle": {
                "guidance": "Set title for the 3D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "title",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setX": {
                "guidance": "Set parameters for the 3D histogram of given id:\nnxbins; xvalMin; xvalMax; xunit; xfunction; xbinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "nbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "valMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "valMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setXaxis": {
                "guidance": "Set x-axis title for the 3D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setY": {
                "guidance": "Set parameters for the 3D histogram of given id:\nnybins; yvalMin; yvalMax; yunit; yfunction; ybinScheme",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "nbins",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "name": "valMin",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "name": "valMax",
                        "omit": "False",
                        "type": "d"
                    },
                    {
                        "default": "none",
                        "name": "valUnit",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "none",
                        "name": "valFcn",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "linear",
                        "name": "valBinScheme",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setYaxis": {
                "guidance": "Set y-axis title for the 3D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setZaxis": {
                "guidance": "Set z-axis title for the 3D histogram of given id",
                "params": [
                    {
                        "name": "id",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "none",
                        "name": "axis",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "setActivation": {
            "guidance": "Set activation.\nWhen this option is enabled, only the histograms marked as activated\nare returned, filled or saved on file.\nNo warning is issued when Get or Fill is called on inactive histogram.",
            "params": [
                {
                    "name": "Activation",
                    "omit": "False",
                    "type": "b"
                }
            ]
        },
        "setFileName": {
            "guidance": "Set name for the histograms & ntuple file",
            "params": [
                {
                    "name": "Filename",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setHistoDirName": {
            "guidance": "Set name for the histograms directory",
            "params": [
                {
                    "name": "HistoDirName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setNtupleDirName": {
            "guidance": "Set name for the ntuple directory",
            "params": [
                {
                    "name": "NtupleDirName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set verbose level\nRange of parameters : VerboseLevel>=0 && VerboseLevel<=4",
            "params": [
                {
                    "name": "VerboseLevel",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "control": {
        "add": {
            "guidance": "Define a new alias as the sum of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "alias": {
            "guidance": "Set an alias.\nString can be aliased by this command.\nThe string may contain one or more spaces,\nthe string must be enclosed by double quotes (\").\nTo use an alias, enclose the alias name with\nparenthis \"{\" and \"}\".",
            "params": [
                {
                    "name": "aliasName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "aliasValue",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "cout": {
            "ignoreInitializationCout": {
                "guidance": "Omit cout from threads during initialization, as they should be identical to the masther thread.\nThis command takes effect only if cout destination is screen without buffering.\nThis command does not affect to cerr.",
                "params": [
                    {
                        "default": "1",
                        "name": "IgnoreInit",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "ignoreThreadsExcept": {
                "guidance": "Omit cout from threads except the specified one.\nThis command takes effect only if cout destination is screen without buffering.\nIf specified thread ID is greater than the number of threads,\nno cout is displayed from worker threads. -1 to reset.\nThis command does not affect to cerr.",
                "params": [
                    {
                        "default": "0",
                        "name": "threadID",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "prefixString": {
                "guidance": "Set the prefix string for each cout/cerr line from a thread.",
                "params": [
                    {
                        "default": "G4WT",
                        "name": "prefix",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "setCerrFile": {
                "guidance": "Send G4cerr stream to a file dedicated to a thread.\nTo have a display output, use special keyword \"**Screen**\".\nIf append flag is true output is appended to file,\notherwise file output is overwritten.",
                "params": [
                    {
                        "default": "**Screen**",
                        "name": "fileName",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "1",
                        "name": "append",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "setCoutFile": {
                "guidance": "Send G4cout stream to a file dedicated to a thread.\nTo have a display output, use special keyword \"**Screen**\".\nIf append flag is true output is appended to file,\notherwise file output is overwritten.",
                "params": [
                    {
                        "default": "**Screen**",
                        "name": "fileName",
                        "omit": "True",
                        "type": "s"
                    },
                    {
                        "default": "1",
                        "name": "append",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "useBuffer": {
                "guidance": "Send cout and/or cerr stream to a buffer.\nThe buffered text will be printed at the end of the job\nfor each thread at a time, so that output of each thread is grouped.\nThis command has no effect if output goes to a file.",
                "params": [
                    {
                        "default": "1",
                        "name": "flag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        },
        "createHTML": {
            "guidance": "Generate HTML files for all of sub-directories and commands.\nDirectory path should be given by FULL-PATH.",
            "params": [
                {
                    "default": "/",
                    "name": "dirPath",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "divide": {
            "guidance": "Define a new alias as the division of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "doif": {
            "guidance": "Execute a macro file if the expression is true.\nSyntax : <double> <comp> <double> <UI_command>",
            "params": [
                {
                    "name": "left",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "comp",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "right",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "UI_command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "echo": {
            "guidance": "Display the aliased value.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "execute": {
            "guidance": "Execute a macro file.",
            "params": [
                {
                    "name": "fileName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "foreach": {
            "guidance": "Execute a macro file more than once.\nLoop counter can be used as an aliased variable.\nValues must be separated by a space.",
            "params": [
                {
                    "name": "macroFile",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "counterName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "valueList",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "getEnv": {
            "guidance": "Get a shell environment variable and define it as an alias.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "getVal": {
            "guidance": "Get the current value of the UI command and define it as an alias.\nCommand is ignored if the UI command does not support GetCurrentValue().\nSyntax : <alias_name> <UI_command>",
            "params": [
                {
                    "name": "alias_name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "UI_command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "if": {
            "guidance": "Execute a macro file if the expression is true.\nSyntax : <double> <comp> <double> <macro_file>",
            "params": [
                {
                    "name": "left",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "comp",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "right",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "aliasValue",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "listAlias": {
            "guidance": "List aliases.",
            "params": []
        },
        "loop": {
            "guidance": "Execute a macro file more than once.\nLoop counter can be used as an aliased variable.",
            "params": [
                {
                    "name": "macroFile",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "counterName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "initialValue",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "finalValue",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "1",
                    "name": "stepSize",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "macroPath": {
            "guidance": "Set macro search pathwith colon-separated list.",
            "params": [
                {
                    "name": "path",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "manual": {
            "guidance": "Display all of sub-directories and commands.\nDirectory path should be given by FULL-PATH.",
            "params": [
                {
                    "default": "/",
                    "name": "dirPath",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "maximumStoredHistory": {
            "guidance": "Set maximum number of stored UI commands.",
            "params": [
                {
                    "default": "20",
                    "name": "max",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "multiply": {
            "guidance": "Define a new alias as the multiplification of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "remainder": {
            "guidance": "Define a new alias as the remainder of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "saveHistory": {
            "guidance": "Store command history to a file.\nDefaul file name is G4history.macro.",
            "params": [
                {
                    "default": "G4History.macro",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "shell": {
            "guidance": "Execute a (Unix) SHELL command.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "stopSavingHistory": {
            "guidance": "Stop saving history file.",
            "params": []
        },
        "subtract": {
            "guidance": "Define a new alias as the subtraction of two values.\nSyntax : <new_alias> <value1> <value2>\n<new_alias> may be an already existing alias. If it is the case,\naliased value is alternated.",
            "params": [
                {
                    "name": "new_alias",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "value1",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "value2",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "suppressAbortion": {
            "guidance": "Suppress the program abortion caused by G4Exception.\nSuppression level = 0 : no suppression\n= 1 : suppress during EventProc state\n= 2 : full suppression, i.e. no abortion by G4Exception\nWhen abortion is suppressed, you will get error messages issued by G4Exception,\nand there is NO guarantee for the correct result after the G4Exception error message.\nRange of parameters : level >= 0 && level <= 2",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "unalias": {
            "guidance": "Remove an alias.",
            "params": [
                {
                    "name": "aliasName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Applied command will also be shown on screen.\nThis command is useful with MACRO file.\n0 : silent\n1 : only the valid commands are shown.\n2 : comment lines are also shown (default).\nRange of parameters : switch >= 0 && switch <=2",
            "params": [
                {
                    "default": "2",
                    "name": "switch",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "cuts": {
        "dump": {
            "guidance": "Dump cuplues in ProductuinCutsTable.",
            "params": []
        },
        "setHighEdge": {
            "guidance": "Set high edge energy value\nRange of parameters : edge >0.0",
            "params": [
                {
                    "default": "100",
                    "name": "edge",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "TeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setLowEdge": {
            "guidance": "Set low edge energy value\nRange of parameters : edge >0.0",
            "params": [
                {
                    "default": "0.99",
                    "name": "edge",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "keV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setMaxCutEnergy": {
            "guidance": "Set maximum of cut energy value\nRange of parameters : cut >0.0",
            "params": [
                {
                    "default": "10",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set the Verbose level of G4ProductionCutsTable.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more info\n2 : Display debug info\nRange of parameters : level >=0 && level <=3",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "event": {
        "abort": {
            "guidance": "Abort current event.",
            "params": []
        },
        "keepCurrentEvent": {
            "guidance": "Store the current event to G4Run object instead of deleting it at the end of event.\nStored event is available through G4Run until the begining of next run.\nGiven the potential large memory size of G4Event and its datamember objects stored in G4Event,\nthe user must be careful and responsible for not to store too many G4Event objects.",
            "params": []
        },
        "stack": {
            "clear": {
                "guidance": "Clear stacked tracks.\n2 : clear all tracks in all stacks\n1 : clear tracks in the urgent and waiting stacks\n0 : clear tracks in the waiting stack (default)\n-1 : clear tracks in the urgent stack\n-2 : clear tracks in the postponed stack\nRange of parameters : level>=-2&&level<=2",
                "params": [
                    {
                        "default": "0",
                        "name": "level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "status": {
                "guidance": "List current status of the stack.",
                "params": []
            },
            "verbose": {
                "guidance": "Set verbose level for G4StackManager\n0 : Silence (default)\n1 : Minimum statistics\n2 : Detailed reports\nNote - this value is overwritten by /event/verbose command.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            }
        },
        "verbose": {
            "guidance": "Set Verbose level of event management category.\n0 : Silent\n1 : Stacking information\n2 : More...\nRange of parameters : level>=0",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "geometry": {
        "navigator": {
            "check_mode": {
                "guidance": "Set navigator in -check_mode- state.\nThis will cause extra checks to be applied during\nnavigation. More strict and less tolerant conditions\nare applied. A run-time performance penalty may be\nobserved when the -check_mode- state is activated.\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!",
                "params": [
                    {
                        "default": "0",
                        "name": "checkFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "push_notify": {
                "guidance": "Set navigator verbosity push notifications.\nThis allows to disable/re-enable verbosity in\nnavigation, when tracks may get stuck and require\none artificial push along the direction by the\nnavigator. Notification is active by default.\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!",
                "params": [
                    {
                        "default": "1",
                        "name": "pushFlag",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "reset": {
                "guidance": "Reset navigator and navigation history.\nNOTE: must be called only after kernel has been\ninitialized once through the run manager!",
                "params": []
            },
            "verbose": {
                "guidance": "Set run-time verbosity for the navigator.\n0 : Silent (default)\n1 : Display volume positioning and step lengths\n2 : Display step/safety info on point location\n3 : Display minimal state at -every- step\n4 : Maximum verbosity (very detailed!)\nNOTE: this command has effect -only- if Geant4 has\nbeen installed with the G4VERBOSE flag set!\nRange of parameters : level >=0 && level <=4",
                "params": [
                    {
                        "default": "0",
                        "name": "level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "test": {
            "maximum_errors": {
                "guidance": "Set the maximum number of overlap errors to report\nfor each single volume being checked.\nOnce reached the maximum number specified, overlaps\naffecting that volume further than that are simply ignored.",
                "params": [
                    {
                        "default": "1",
                        "name": "maximum_errors",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "recursion_depth": {
                "guidance": "Set the depth in the geometry tree for recursion.\nrecursive_test will then stop after reached the specified depth.\nBy default, recursion will proceed for the whole depth.",
                "params": [
                    {
                        "default": "-1",
                        "name": "recursion_depth",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "recursion_start": {
                "guidance": "Set the initial level in the geometry tree for recursion.\nrecursive_test will then start from the specified level.",
                "params": [
                    {
                        "default": "0",
                        "name": "initial_level",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "resolution": {
                "guidance": "Set the number of points on surface to be generated for\nchecking overlaps.",
                "params": [
                    {
                        "default": "10000",
                        "name": "resolution",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "run": {
                "guidance": "Start running the recursive overlap check.\nVolumes are recursively asked to verify for overlaps\nfor points generated on the surface against their\nrespective mother volume and sisters at the same\nlevel, performing for all daughters and daughters of\ndaughters, etc.\nNOTE: it may take a very long time,\ndepending on the geometry complexity !",
                "params": []
            },
            "tolerance": {
                "guidance": "Define tolerance (in mm) by which overlaps reports\nshould be reported. By default, all overlaps are\nreported, i.e. tolerance is set to: 0*mm.",
                "params": [
                    {
                        "default": "taken from the current value",
                        "name": "Tolerance",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "default": "mm",
                        "name": "Unit",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "verbosity": {
                "guidance": "Specify if running in verbosity mode or not.\nBy default verbosity is set to ON (TRUE).",
                "params": [
                    {
                        "default": "1",
                        "name": "verbosity",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        }
    },
    "gps": {
        "List": {
            "guidance": "List available particles.\nInvoke G4ParticleTable.",
            "params": []
        },
        "direction": {
            "guidance": "Set momentum direction.\nDirection needs not to be a unit vector.\nAngular distribution type is set to planar.\nRange of parameters : Px != 0 || Py != 0 || Pz != 0",
            "params": [
                {
                    "name": "Px",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Py",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Pz",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "energy": {
            "guidance": "Set kinetic energy.",
            "params": [
                {
                    "name": "Energy",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "ion": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gps/ion Z A Q E\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nE:(double) Excitation energy (in keV)",
            "params": [
                {
                    "default": "1",
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0.0",
                    "name": "E",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "ionLvl": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gps/ion Z A Q Lvl\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nLvl:(int) Number of metastable state excitation level (0-9)",
            "params": [
                {
                    "default": "1",
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0.0",
                    "name": "Lvl",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "number": {
            "guidance": "Set number of particles to be generated per vertex.\nRange of parameters : N>0",
            "params": [
                {
                    "name": "N",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "particle": {
            "guidance": "Set particle to be generated.\n(geantino is default)\n(ion can be specified for shooting ions)",
            "params": [
                {
                    "default": "geantino",
                    "name": "particleName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "polarization": {
            "guidance": "Set polarization.\nRange of parameters : Px>=-1.&&Px<=1.&&Py>=-1.&&Py<=1.&&Pz>=-1.&&Pz<=1.",
            "params": [
                {
                    "name": "Px",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Py",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Pz",
                    "omit": "False",
                    "type": "d"
                }
            ]
        },
        "position": {
            "guidance": "Set starting position of the particle for a Point like source.\nSame effect as the two /gps/pos/type Point /gps/pos/centre commands.",
            "params": [
                {
                    "name": "X",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Y",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "time": {
            "guidance": "Set initial time of the particle.",
            "params": [
                {
                    "name": "t0",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "ns",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level for GPS\n0 : Silent\n1 : Limited information\n2 : Detailed information\nRange of parameters : level>=0 && level <=2",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "gui": {
        "addButton": {
            "guidance": "Add a button to menu.",
            "params": [
                {
                    "default": "dummy",
                    "name": "Menu",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "dummy",
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "Command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "addIcon": {
            "guidance": "Add a non-checkable icon to the Icon toolbar.\nIf the Icon parameter is set to \"user_icon\", you should provide the icon file in xpm format, otherwise you have to choose one of the candidate icons\nA command given without parameters will display a window that will allow one to choose the parameters (if needed) for this command.\nE.g: /gui/addIcon \"Change background color\" user_icon /vis/viewer/set/background ../Images/background.xpm\nSpecial cases for the Icon parameter:\n- open: Open an open-file-selector that can run the Command with File as argument.\n- save: Open a save-file-selector that can run the Command with File as argument.\n- move/rotate/pick/zoom_in/zoom_out: Theses icons are radio-button icons that can change cursor action.\n- wireframe/solid/hidden_line_removal/hidden_line_and_surface_removal: These icons are radio-button icons that can change drawing style.\n- perspective/ortho: These icons are radio-button icons that can change projection style.",
            "params": [
                {
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "Icon",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "no_command",
                    "name": "Command",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "no_file",
                    "name": "File",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "addMenu": {
            "guidance": "Add a menu to menu bar.",
            "params": [
                {
                    "default": "dummy",
                    "name": "Name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "dummy",
                    "name": "Label",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "system": {
            "guidance": "Send a command to the system.",
            "params": [
                {
                    "name": "Command",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "gun": {
        "List": {
            "guidance": "List available particles.\nInvoke G4ParticleTable.",
            "params": []
        },
        "direction": {
            "guidance": "Set momentum direction.\nDirection needs not to be a unit vector.\nRange of parameters : ex != 0 || ey != 0 || ez != 0",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "ex",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "ey",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "ez",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "energy": {
            "guidance": "Set kinetic energy.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "Energy",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "ion": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gun/ion Z A Q\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nE:(double) Excitation energy (in keV)",
            "params": [
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "-1",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "E",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "ionL": {
            "guidance": "Set properties of ion to be generated.\n[usage] /gun/ion Z A Q I\nZ:(int) AtomicNumber\nA:(int) AtomicMass\nQ:(int) Charge of Ion (in unit of e)\nI:(int) Level number of metastable state (0 = ground)",
            "params": [
                {
                    "name": "Z",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "name": "A",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "-1",
                    "name": "Q",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "I",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "momentum": {
            "guidance": "Set momentum. This command is equivalent to two commands /gun/direction and /gun/momentumAmp\nRange of parameters : px != 0 || py != 0 || pz != 0",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "px",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "py",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "pz",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "momentumAmp": {
            "guidance": "Set absolute value of momentum.\nDirection should be set by /gun/direction command.\nThis command should be used alternatively with /gun/energy.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "Momentum",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "GeV",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "number": {
            "guidance": "Set number of particles to be generated.\nRange of parameters : N>0",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "N",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "particle": {
            "guidance": "Set particle to be generated.\n(geantino is default)\n(ion can be specified for shooting ions)",
            "params": [
                {
                    "default": "geantino",
                    "name": "particleName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "polarization": {
            "guidance": "Set polarization.\nRange of parameters : Px>=-1.&&Px<=1.&&Py>=-1.&&Py<=1.&&Pz>=-1.&&Pz<=1.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "Px",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Py",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Pz",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "position": {
            "guidance": "Set starting position of the particle.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "X",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Y",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "taken from the current value",
                    "name": "Z",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "time": {
            "guidance": "Set initial time of the particle.",
            "params": [
                {
                    "default": "taken from the current value",
                    "name": "t0",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "ns",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        }
    },
    "heptst": {
        "processAbsLevel": {
            "guidance": "Set absolute energy level (with unit) of allowed energy non-conservation",
            "params": [
                {
                    "default": "-1",
                    "name": "ProcessAbsLevel",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "name": "Unit",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "processRelLevel": {
            "guidance": "Set relative level of allowed energy non-conservation",
            "params": [
                {
                    "default": "-1",
                    "name": "ProcessRelLevel",
                    "omit": "True",
                    "type": "d"
                }
            ]
        },
        "reportLevel": {
            "guidance": "Set level of detail reported upon E/p non-conservation\n0 - (default) no reporting\n1 - report only when E/p not conserved\n2 - report regardless of E/p conservation\n3 - report only when E/p not conserved, with names, limits\n4 - report regardless of E/p conservation, with names, limits\nRange of parameters : ReportLevel >= 0 && ReportLevel < 5",
            "params": [
                {
                    "default": "0",
                    "name": "ReportLevel",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "hits": {
        "activate": {
            "guidance": "Activate sensitive detector(s).",
            "params": [
                {
                    "default": "/",
                    "name": "detector",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "inactivate": {
            "guidance": "Inactivate sensitive detector(s).",
            "params": [
                {
                    "default": "/",
                    "name": "detector",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "List sensitive detector tree.",
            "params": []
        },
        "verbose": {
            "guidance": "Set the Verbose level.",
            "params": [
                {
                    "name": "level",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "material": {
        "g4": {
            "printDensityEffParam": {
                "guidance": "print Material from G4DensityEffectData.\nall - all materials",
                "params": [
                    {
                        "default": "all",
                        "name": "dmat",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printElement": {
                "guidance": "print Element from G4ElementTable.\nall - all elements.",
                "params": [
                    {
                        "default": "all",
                        "name": "elm",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printMaterial": {
                "guidance": "print Material from G4MaterialTable.\nall - all materials",
                "params": [
                    {
                        "default": "all",
                        "name": "pmat",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "nist": {
            "listMaterials": {
                "guidance": "Materials in Geant4 dataBase.\nsimple - simple NIST materials.\ncompound - compound NIST materials.\nhep - HEP materials.\nbio - biomedical materials.\nall - list of all Geant4 materials.",
                "params": [
                    {
                        "default": "all",
                        "name": "matlist",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printElement": {
                "guidance": "print element(s) in dataBase.\nsymbol = element.\nall    = all elements.",
                "params": [
                    {
                        "default": "all",
                        "name": "symbol",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "printElementZ": {
                "guidance": "print element Z in dataBase.\n0 = all elements.\nRange of parameters : 0<=Z && Z<108",
                "params": [
                    {
                        "default": "0",
                        "name": "Z",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "verbose": {
            "guidance": "Set verbose level.",
            "params": [
                {
                    "name": "",
                    "omit": "False",
                    "type": "i"
                }
            ]
        }
    },
    "particle": {
        "createAllIon": {
            "guidance": "Create All ions (ground state)",
            "params": []
        },
        "createAllIsomer": {
            "guidance": "Create All isomers",
            "params": []
        },
        "find": {
            "guidance": "Find particle by encoding",
            "params": [
                {
                    "default": "0",
                    "name": "encoding",
                    "omit": "False",
                    "type": "i"
                }
            ]
        },
        "list": {
            "guidance": "List name of particles.\nall(default)/lepton/baryon/meson/nucleus/quarks",
            "params": [
                {
                    "default": "all",
                    "name": "particle type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "manage": {
            "nuclideTable": {
                "level_tolerance": {
                    "guidance": "Set tolerance in level seaching.\nUnit of the energy can be :\nMeV, keV, eV (default)\nRange of parameters : lTolerance >0.0",
                    "params": [
                        {
                            "default": "1",
                            "name": "lTolerance",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "eV",
                            "name": "Unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "min_halflife": {
                    "guidance": "Set threshold of half-life.\nUnit of the time can be :\ns, ms, ns (default)\nRange of parameters : life >0.0",
                    "params": [
                        {
                            "default": "1000",
                            "name": "life",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "ns",
                            "name": "Unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                }
            }
        },
        "process": {
            "activate": {
                "guidance": "Activate process\nActivate [process index]\nRange of parameters : index >=0",
                "params": [
                    {
                        "default": "0",
                        "name": "index",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "dump": {
                "guidance": "dump process manager or process information\ndump [process index]\nprocess index: -1 for process manager",
                "params": [
                    {
                        "default": "-1",
                        "name": "index",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            },
            "inactivate": {
                "guidance": "Inactivate process\ninactivate [process index]\nRange of parameters : index >=0",
                "params": [
                    {
                        "default": "0",
                        "name": "index",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "verbose": {
                "guidance": "Set Verbose Level for Process or Process Manager\nVerbose [Verbose] [process index]\nprocess index: -1 for process manager",
                "params": [
                    {
                        "default": "1",
                        "name": "Verbose",
                        "omit": "True",
                        "type": "i"
                    },
                    {
                        "default": "-1",
                        "name": "index",
                        "omit": "True",
                        "type": "i"
                    }
                ]
            }
        },
        "property": {
            "decay": {
                "br": {
                    "guidance": "Set branching ratio. [0< BR <1.0]\nRange of parameters : (br >=0.0) && (br <=1.0)",
                    "params": [
                        {
                            "name": "br",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "dump": {
                    "guidance": "Dump decay mode information.",
                    "params": []
                },
                "select": {
                    "guidance": "Enter index of decay mode.\nRange of parameters : mode >=0",
                    "params": [
                        {
                            "default": "0",
                            "name": "mode",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                }
            }
        },
        "select": {
            "guidance": "Select particle",
            "params": [
                {
                    "default": "none",
                    "name": "particle name",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level of particle table.\n0 : Silent (default)\n1 : Display warning messages\n2 : Display more\nRange of parameters : verbose_level >=0",
            "params": [
                {
                    "default": "0",
                    "name": "verbose_level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "physics_lists": {
        "em": {
            "GammaNuclear": {
                "guidance": "Switching on gamma nuclear physics.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "MuonNuclear": {
                "guidance": "Switching on muon nuclear physics.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "SyncRadiation": {
                "guidance": "Switching on/off synchrotron radiation.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "SyncRadiationAll": {
                "guidance": "Switching on/off synchrotron radiation for all charged.",
                "params": [
                    {
                        "name": "",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            }
        }
    },
    "process": {
        "activate": {
            "guidance": "Activate processes\nActivate  name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "dump": {
            "guidance": "Dump process information\ndump name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "inactivate": {
            "guidance": "Inactivate process\nInactivate processes\nInactivate  name [particle]\nname:     process name or type name\nparticle: particle name [all: for all particles]",
            "params": [
                {
                    "name": "procName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "all",
                    "name": "particle",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "list": {
            "guidance": "List up process names\nlist [type]\ntype: process type [all:for all proceeses]",
            "params": [
                {
                    "default": "all",
                    "name": "type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "msc": {
            "DisplacementBeyondSafety": {
                "guidance": "Enable/disable displacement at geometry boundary",
                "params": [
                    {
                        "default": "0",
                        "name": "cat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "FactorForAngleLimit": {
                "guidance": "Set factor for computation of a limit for -t (invariant trasfer)\nRange of parameters : Fact>0",
                "params": [
                    {
                        "default": "1",
                        "name": "Fact",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "GeomFactor": {
                "guidance": "Set GeomFactor parameter for msc processes\nRange of parameters : Fg>0",
                "params": [
                    {
                        "default": "3.5",
                        "name": "Fg",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "LateralDisplacement": {
                "guidance": "Enable/disable sampling of lateral displacement",
                "params": [
                    {
                        "default": "1",
                        "name": "lat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "MuHadLateralDisplacement": {
                "guidance": "Enable/disable sampling of lateral displacement for muons and hadrons",
                "params": [
                    {
                        "default": "1",
                        "name": "mulat",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            },
            "RangeFactor": {
                "guidance": "Set RangeFactor for msc processes of e+-\nRange of parameters : Fr>0",
                "params": [
                    {
                        "default": "0.04",
                        "name": "Fr",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "RangeFactorMuHad": {
                "guidance": "Set RangeFactor for msc processes of muons/hadrons\nRange of parameters : Fr>0",
                "params": [
                    {
                        "default": "0.2",
                        "name": "Fr1",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "Skin": {
                "guidance": "Set skin parameter for msc processes",
                "params": [
                    {
                        "name": "skin",
                        "omit": "True",
                        "type": "d"
                    }
                ]
            },
            "StepLimit": {
                "guidance": "Set msc step limitation type",
                "params": [
                    {
                        "name": "StepLim",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "StepLimitMuHad": {
                "guidance": "Set msc step limitation type for muons/hadrons",
                "params": [
                    {
                        "name": "StepLim1",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "ThetaLimit": {
                "guidance": "Set the limit on the polar angle for msc and single scattering",
                "params": [
                    {
                        "name": "theta",
                        "omit": "True",
                        "type": "d"
                    },
                    {
                        "name": "Unit",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "UseMottCorrection": {
                "guidance": "Enable usage of Mott corrections for e- elastic scattering",
                "params": [
                    {
                        "default": "0",
                        "name": "mott",
                        "omit": "True",
                        "type": "b"
                    }
                ]
            }
        },
        "setVerbose": {
            "guidance": "Set verbose level for processes\nsetVerbose level [type or name]\nlevel: verbose level\nname : process name\ntype : process type\n[all] for all proceeses",
            "params": [
                {
                    "name": "verbose",
                    "omit": "False",
                    "type": "i"
                },
                {
                    "default": "all",
                    "name": "type",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose Level for Process Table\nverbose [level]\nlevel: verbose level\nRange of parameters : verbose >=0",
            "params": [
                {
                    "default": "1",
                    "name": "verbose",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "random": {
        "resetEngineFrom": {
            "guidance": "Reset the status of the rndm engine from a file.\nSee CLHEP manual for detail.\nThe engine status must be stored beforehand.\nDirectory of the status file should be set by /random/setDirectoryName.",
            "params": [
                {
                    "default": "currentRun.rndm",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "resetEngineFromEachEvent": {
            "guidance": "Reset the status of the rndm engine from a file at each event.\nNote that the file must follow the following naming convention:\nrun{#1}evt{#2}.rndm ; where #1 is the run number and #2 is the event number.\nFor example to re-seed the first event of the first run the file should be called run0evt0.rndm.\nIf for a specific run/event the file is not found, the standard re-seeding strategy is used.\nThis command has meaning only in MT mode for strong reproducibility studies.\nDirectory of the status file should be set by /random/setDirectoryName.",
            "params": [
                {
                    "default": "0",
                    "name": "",
                    "omit": "False",
                    "type": "b"
                }
            ]
        },
        "saveEachEventFlag": {
            "guidance": "Save random number status at beginning of each event.\nFile name contains run and event numbers: runXXXevtYYY.rndm",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "saveThisEvent": {
            "guidance": "copy currentEvent.rndm to runXXXevtYYY.rndm",
            "params": []
        },
        "saveThisRun": {
            "guidance": "copy currentRun.rndm to runXXX.rndm",
            "params": []
        },
        "setDirectoryName": {
            "guidance": "Define the directory name of the rndm status files.\nDirectory will be created if it does not exist.",
            "params": [
                {
                    "default": "./",
                    "name": "fileName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setSavingFlag": {
            "guidance": "The randomNumberStatus will be saved at :\nbegining of run (currentRun.rndm) and begining of event (currentEvent.rndm)",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "setSeeds": {
            "guidance": "Initialize the random number generator with integer seed stream.\nNumber of integers should be more than 1.\nActual number of integers to be used depends on the individual random number engine.\nThis command sets the seeds for the master thread.",
            "params": [
                {
                    "name": "IntArray",
                    "omit": "False",
                    "type": "s"
                }
            ]
        }
    },
    "run": {
        "abort": {
            "guidance": "Abort current run processing.\nIf softAbort is false (default), currently processing event will be immediately aborted,\nwhile softAbort is true, abortion occurs after processing the current event.",
            "params": [
                {
                    "default": "0",
                    "name": "softAbort",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "abortCurrentEvent": {
            "guidance": "Abort currently processing event.",
            "params": []
        },
        "beamOn": {
            "guidance": "Start a Run.\nIf G4 kernel is not initialized, it will be initialized.\nDefault number of events to be processed is 1.\nThe second and third arguments can be used for\nexecuting a macro file at the end of each event.\nIf the second argument, i.e. name of the macro\nfile, is given but the third argument is not,\nthe macro file will be executed for all of the\nevent.\nIf the third argument (nSelect) is given, the\nmacro file will be executed only for the first\nnSelect events.",
            "params": [
                {
                    "default": "1",
                    "name": "numberOfEvent",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "***NULL***",
                    "name": "macroFile",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "-1",
                    "name": "nSelect",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "breakAtBeginOfEvent": {
            "guidance": "Set a break point at the begining of every event.",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "breakAtEndOfEvent": {
            "guidance": "Set a break point at the end of every event.",
            "params": [
                {
                    "default": "1",
                    "name": "flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "constructScoringWorlds": {
            "guidance": "Constrct scoring parallel world(s) if defined.\nThis command is not mandatory, but automatically called when a run starts.\nBut the user may use this to visualize the scoring world(s) before a run to start.",
            "params": []
        },
        "dumpCouples": {
            "guidance": "Dump material-cuts-couple information.\nNote that material-cuts-couple information is updated\nafter BeamOn has started.",
            "params": []
        },
        "dumpRegion": {
            "guidance": "Dump region information.\nIn case name of a region is not given, all regions will be displayed.",
            "params": [
                {
                    "default": "**ALL**",
                    "name": "regionName",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "eventModulo": {
            "guidance": "Set the event modulo for dispatching events to worker threads\ni.e. each worker thread is ordered to simulate N events and then\ncomes back to G4MTRunManager for next set.\nIf it is set to zero (default value), N is roughly given by this.\nN = int( sqrt( number_of_events / number_of_threads ) )\nThe value N may affect on the computing performance in particular\nif N is too small compared to the total number of events.\nThe second parameter seedOnce specifies how frequently each worker\nthread is seeded by the random number sequence contrally managed\nby the master G4MTRunManager.\n- If seedOnce is set to 0 (default), seeds that are centrally managed\nby G4MTRunManager are set for every event of every worker thread.\nThis option guarantees event reproducability regardless of number\nof threads.\n- If seedOnce is set to 1, seeds are set only once for the first\nevent of each run of each worker thread. Event reproducability is\nguaranteed only if the same number of worker threads are used.\nOn the other hand, this option offers better computing performance\nin particular for applications with relatively small primary\nparticle energy and large number of events.\n- If seedOnce is set to 2, seeds are set only for the first event of\ngroup of N events. This option is reserved for the future use when\nGeant4 allows number of threads to be dynatically changed during an\nevent loop.\nThis command is valid only for multi-threaded mode.\nThis command is ignored if it is issued in sequential mode.",
            "params": [
                {
                    "default": "0",
                    "name": "N",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "0",
                    "name": "seedOnce",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "geometryModified": {
            "guidance": "Force geometry to be closed (re-voxellized) again.\nThis command must be applied if geometry has been modified\nafter the first initialization (or BeamOn).",
            "params": []
        },
        "getCutForAGivenParticle": {
            "guidance": "Get a cut value to a specific particle\nUsage: /run/getCutForAGivenParticle  gamma",
            "params": [
                {
                    "name": "particleName",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "initialize": {
            "guidance": "Initialize G4 kernel.",
            "params": []
        },
        "numberOfThreads": {
            "guidance": "Set the number of threads to be used.\nThis command works only in PreInit state.\nThis command is valid only for multi-threaded mode.\nThe command is ignored if it is issued in sequential mode.\nRange of parameters : nThreads >0",
            "params": [
                {
                    "default": "2",
                    "name": "nThreads",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "optimizeGeometry": {
            "guidance": "Set the optimization flag for geometry.\nIf it is set to TRUE, G4GeometryManager will optimize\nthe geometry definitions.\nGEANT4 is initialized with this flag as TRUE.",
            "params": [
                {
                    "default": "1",
                    "name": "optimizeFlag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "physicsModified": {
            "guidance": "Force all physics tables recalculated again.\nThis command must be applied\nif physics process has been modified after the\nfirst initialization (or BeamOn).",
            "params": []
        },
        "pinAffinity": {
            "guidance": "Locks each thread to a specific logical core. Workers are locked in round robin to logical cores.\nThis command is valid only for multi-threaded mode.\nThis command works only in PreInit state.\nThis command is ignored if it is issued in sequential mode.\nIf a value n>0 is provided it starts setting affinity from the n-th CPU (note: counting from 1).\nE.g. /run/pinAffinity 3 locks first thread on third logical CPU (number 2).\nIf a value n<0 is provided never locks on n-th CPU.\nRange of parameters : pinAffinity > 0 || pinAffinity < 0",
            "params": [
                {
                    "default": "1",
                    "name": "pinAffinity",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "printProgress": {
            "guidance": "Display begin_of_event information at given frequency.\nIf it is set to zero, only the begin_of_run is shown.\nIf it is set to -1, no print-out is shown.\nRange of parameters : mod>=-1",
            "params": [
                {
                    "default": "-1",
                    "name": "mod",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "reinitializeGeometry": {
            "guidance": "Force geometry to be rebuilt once again.\nThis command must be applied if the user needs his/her\ndetector construction to be reinvoked.\n/run/geometryModified is automatically issued with this command.",
            "params": [
                {
                    "default": "0",
                    "name": "destroyFirst",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "setCut": {
            "guidance": "Set default cut value\nRange of parameters : cut >=0.0",
            "params": [
                {
                    "default": "1",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "setCutForAGivenParticle": {
            "guidance": "Set a cut value to a specific particle\nUsage: /run/setCutForAGivenParticle  gamma  1. mm",
            "params": [
                {
                    "name": "particleName",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "1.",
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "unit",
                    "omit": "False",
                    "type": "s"
                }
            ]
        },
        "setCutForRegion": {
            "guidance": "Set cut value for a region",
            "params": [
                {
                    "name": "Region",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "name": "cut",
                    "omit": "False",
                    "type": "d"
                },
                {
                    "default": "mm",
                    "name": "Unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "storeRndmStatToEvent": {
            "guidance": "Flag to store rndm status to G4Event object.\nflag = 0 : not store (default)\nflag = 1 : status before primary particle generation is stored\nflag = 2 : status before event processing (after primary particle generation) is stored\nflag = 3 : both are stored\nNote: Some performance overhead may be seen by storing rndm status, in particular\nfor the case of simplest geometry and small number of tracks per event.\nRange of parameters : flag>=0 && flag<3",
            "params": [
                {
                    "default": "0",
                    "name": "flag",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "useMaximumLogicalCores": {
            "guidance": "Set the number of threads to be the number of available logical cores.\nThis command works only in PreInit state.\nThis command is valid only for multi-threaded mode.\nThe command is ignored if it is issued in sequential mode.",
            "params": []
        },
        "verbose": {
            "guidance": "Set the Verbose level of G4RunManager.\n0 : Silent (default)\n1 : Display main topics\n2 : Display main topics and run summary\nRange of parameters : level >=0 && level <=2",
            "params": [
                {
                    "default": "0",
                    "name": "level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "tracking": {
        "abort": {
            "guidance": "Abort current G4Track processing.",
            "params": []
        },
        "resume": {
            "guidance": "Resume current G4Track processing.",
            "params": []
        },
        "storeTrajectory": {
            "guidance": "Store trajectories or not.\n0 : Don't Store trajectories.\n!=0 : Store trajectories.\n1 : Choose G4Trajectory as default.\n2 : Choose G4SmoothTrajectory as default.\n3 : Choose G4RichTrajectory as default.\n4 : Choose G4RichTrajectory with auxiliary points as default.\nRange of parameters : Store >=0 && Store <= 4",
            "params": [
                {
                    "default": "0",
                    "name": "Store",
                    "omit": "True",
                    "type": "i"
                }
            ]
        },
        "verbose": {
            "guidance": "Set Verbose level of tracking category.\n-1 : Silent.\n0 : Silent.\n1 : Minium information of each Step.\n2 : Addition to Level=1, info of secondary particles.\n3 : Addition to Level=1, pre/postStepoint information\nafter all AlongStep/PostStep process executions.\n4 : Addition to Level=3, pre/postStepoint information\nat each AlongStepPostStep process execuation.\n5 : Addition to Level=4, proposed Step length information\nfrom each AlongStepPostStep process.\nRange of parameters : verbose_level >=-1",
            "params": [
                {
                    "default": "0",
                    "name": "verbose_level",
                    "omit": "True",
                    "type": "i"
                }
            ]
        }
    },
    "units": {
        "list": {
            "guidance": "full list of available units.",
            "params": []
        }
    },
    "vis": {
        "ASCIITree": {
            "set": {
                "outFile": {
                    "guidance": "Set name of output file.",
                    "params": [
                        {
                            "default": "G4cout",
                            "name": "out-filename",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                }
            }
        },
        "abortReviewKeptEvents": {
            "guidance": "Abort review of kept events.",
            "params": [
                {
                    "default": "1",
                    "name": "abort",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "disable": {
            "guidance": "Disables visualization system.",
            "params": []
        },
        "drawTree": {
            "guidance": "(DTREE) Creates a scene consisting of this physical volume and\n  produces a representation of the geometry hieracrhy.\nThe scene becomes current.",
            "params": [
                {
                    "default": "world",
                    "name": "physical-volume-name",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "ATree",
                    "name": "system",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawView": {
            "guidance": "Draw view from this angle, etc.",
            "params": [
                {
                    "default": "0",
                    "name": "theta-degrees",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "phi-degrees",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "pan-right",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "pan-up",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "pan-unit",
                    "omit": "True",
                    "type": "s"
                },
                {
                    "default": "1",
                    "name": "zoom-factor",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "0",
                    "name": "dolly",
                    "omit": "True",
                    "type": "d"
                },
                {
                    "default": "cm",
                    "name": "dolly-unit",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "drawVolume": {
            "guidance": "Creates a scene containing this physical volume and asks the\ncurrent viewer to draw it.  The scene becomes current.\nIf physical-volume-name is \"world\" (the default), the main geometry\ntree (material world) is drawn.  If \"worlds\", all worlds - material\nworld and parallel worlds, if any - are drawn.  Otherwise a search of\nall worlds is made, taking the first matching occurence only.  To see\na representation of the geometry hierarchy of the worlds, try\n\"/vis/drawTree [worlds]\" or one of the driver/browser combinations\nthat have the required functionality, e.g., HepRep",
            "params": [
                {
                    "default": "world",
                    "name": "physical-volume-name",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "enable": {
            "guidance": "Enables/disables visualization system.",
            "params": [
                {
                    "default": "1",
                    "name": "enabled",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "filtering": {
            "digi": {
                "create": {
                    "attributeFilter": {
                        "guidance": "Create a attributeFilter model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    }
                }
            },
            "hits": {
                "create": {
                    "attributeFilter": {
                        "guidance": "Create a attributeFilter model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    }
                }
            },
            "trajectories": {
                "create": {
                    "attributeFilter": {
                        "guidance": "Create a attributeFilter model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "chargeFilter": {
                        "guidance": "Create a chargeFilter model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "originVolumeFilter": {
                        "guidance": "Create a originVolumeFilter model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    },
                    "particleFilter": {
                        "guidance": "Create a particleFilter model and associated messengers.\nGenerated model becomes current.",
                        "params": [
                            {
                                "name": "model-name",
                                "omit": "True",
                                "type": "s"
                            }
                        ]
                    }
                }
            }
        },
        "gMocren": {
            "addHitName": {
                "guidance": "hit name for a dose distribution in gMocren data.",
                "params": [
                    {
                        "name": "kgMocrenHitName",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "addHitScorerName": {
                "guidance": "hit scorer name for a dose distribution in gMocren data.",
                "params": [
                    {
                        "name": "kgMocrenHitScorerNames",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "addPointAttributes": {
                "guidance": "Adds point attributes to the points of trajectories.",
                "params": [
                    {
                        "default": "0",
                        "name": "flag",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "appendGeometry": {
                "guidance": "Appends copy of geometry to every event.",
                "params": [
                    {
                        "default": "1",
                        "name": "flag",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "drawVolumeGrid": {
                "guidance": "Add grid of the volume.",
                "params": [
                    {
                        "default": "0",
                        "name": "kDrawVolumeGrid",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            },
            "list": {
                "guidance": "list gMocren command parameters.",
                "params": []
            },
            "resetHitNames": {
                "guidance": "reset all hit names.",
                "params": []
            },
            "resetHitScorerName": {
                "guidance": "reset all hit scorer names.",
                "params": []
            },
            "setEventNumberSuffix": {
                "guidance": "Write separate event files, appended with given suffix.\nDefine the suffix with a pattern such as '-0000'.",
                "params": [
                    {
                        "name": "suffix",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "setNumberOfVoxels": {
                "guidance": "set number of voxels.",
                "params": [
                    {
                        "default": "1",
                        "name": "nX",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "1",
                        "name": "nY",
                        "omit": "False",
                        "type": "i"
                    },
                    {
                        "default": "1",
                        "name": "nZ",
                        "omit": "False",
                        "type": "i"
                    }
                ]
            },
            "setScoringMeshName": {
                "guidance": "scoring mesh name for a dose distribution in gMocren data.",
                "params": [
                    {
                        "default": "gMocrenScoringMesh",
                        "name": "kgMocrenScoringMeshName",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "setVolumeName": {
                "guidance": "detector name for a volume data in gMocren data.",
                "params": [
                    {
                        "default": "gMocrenVolume",
                        "name": "kgMocrenVolumeName",
                        "omit": "False",
                        "type": "s"
                    }
                ]
            },
            "useSolids": {
                "guidance": "Use GMocren Solids, rather than Geant4 Primitives.",
                "params": [
                    {
                        "default": "1",
                        "name": "flag",
                        "omit": "False",
                        "type": "b"
                    }
                ]
            }
        },
        "geometry": {
            "list": {
                "guidance": "Lists vis attributes of logical volume(s).\n\"all\" lists all logical volumes.",
                "params": [
                    {
                        "default": "all",
                        "name": "logical-volume-name",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            },
            "restore": {
                "guidance": "Restores vis attributes of logical volume(s).",
                "params": [
                    {
                        "default": "all",
                        "name": "logical-volume-name",
                        "omit": "True",
                        "type": "s"
                    }
                ]
            }
        },
        "initialize": {
            "guidance": "Initialise visualisation manager.",
            "params": []
        },
        "list": {
            "guidance": "Lists visualization parameters.",
            "params": [
                {
                    "default": "warnings",
                    "name": "verbosity",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "modeling": {
            "trajectories": {
                "drawByCharge-0": {
                    "default": {
                        "setAuxPtsColour": {
                            "guidance": "Set colour through a string",
                            "params": [
                                {
                                    "name": "Variable",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setAuxPtsColourRGBA": {
                            "guidance": "Set colour through red, green, blue and alpha components\nFour inputs are expected.",
                            "params": [
                                {
                                    "name": "Red component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Green component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Blue component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Alpha component",
                                    "omit": "False",
                                    "type": "d"
                                }
                            ]
                        },
                        "setAuxPtsFillStyle": {
                            "guidance": "Set auxiliary fill style.",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setAuxPtsSize": {
                            "guidance": "Set auxiliary points size command",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setAuxPtsSizeType": {
                            "guidance": "Set auxiliary size type.",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setAuxPtsType": {
                            "guidance": "Set auxiliary points type.",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setAuxPtsVisible": {
                            "guidance": "Set auxiliary points visibility command",
                            "params": [
                                {
                                    "name": "Bool",
                                    "omit": "False",
                                    "type": "b"
                                }
                            ]
                        },
                        "setDrawAuxPts": {
                            "guidance": "Set draw auxiliary points command",
                            "params": [
                                {
                                    "name": "Bool",
                                    "omit": "False",
                                    "type": "b"
                                }
                            ]
                        },
                        "setDrawLine": {
                            "guidance": "Set draw line command",
                            "params": [
                                {
                                    "name": "Bool",
                                    "omit": "False",
                                    "type": "b"
                                }
                            ]
                        },
                        "setDrawStepPts": {
                            "guidance": "Set draw step points command",
                            "params": [
                                {
                                    "name": "Bool",
                                    "omit": "False",
                                    "type": "b"
                                }
                            ]
                        },
                        "setLineColour": {
                            "guidance": "Set colour through a string",
                            "params": [
                                {
                                    "name": "Variable",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setLineColourRGBA": {
                            "guidance": "Set colour through red, green, blue and alpha components\nFour inputs are expected.",
                            "params": [
                                {
                                    "name": "Red component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Green component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Blue component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Alpha component",
                                    "omit": "False",
                                    "type": "d"
                                }
                            ]
                        },
                        "setLineVisible": {
                            "guidance": "Set line visibility command",
                            "params": [
                                {
                                    "name": "Bool",
                                    "omit": "False",
                                    "type": "b"
                                }
                            ]
                        },
                        "setStepPtsColour": {
                            "guidance": "Set colour through a string",
                            "params": [
                                {
                                    "name": "Variable",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setStepPtsColourRGBA": {
                            "guidance": "Set colour through red, green, blue and alpha components\nFour inputs are expected.",
                            "params": [
                                {
                                    "name": "Red component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Green component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Blue component",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Alpha component",
                                    "omit": "False",
                                    "type": "d"
                                }
                            ]
                        },
                        "setStepPtsFillStyle": {
                            "guidance": "Set step fill style type.",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setStepPtsSize": {
                            "guidance": "Set step points size command",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setStepPtsSizeType": {
                            "guidance": "Set step size type.",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setStepPtsType": {
                            "guidance": "Set step points type.",
                            "params": [
                                {
                                    "name": "",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        },
                        "setStepPtsVisible": {
                            "guidance": "Set step points visible command",
                            "params": [
                                {
                                    "name": "Bool",
                                    "omit": "False",
                                    "type": "b"
                                }
                            ]
                        },
                        "setTimeSliceInterval": {
                            "guidance": "Set time slice interval.  Give unit, e.g., \"0.1 ns\"",
                            "params": [
                                {
                                    "name": "DoubleAndUnit",
                                    "omit": "False",
                                    "type": "d"
                                },
                                {
                                    "name": "Unit",
                                    "omit": "False",
                                    "type": "s"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "ogl": {
            "set": {
                "displayHeadTime": {
                    "guidance": "Display head time of range in 2D text.",
                    "params": [
                        {
                            "default": "0",
                            "name": "displayHeadTime",
                            "omit": "False",
                            "type": "b"
                        },
                        {
                            "default": "-0.9",
                            "name": "screenX",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "-0.9",
                            "name": "screenY",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "24",
                            "name": "screenSize",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "red",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "displayLightFront": {
                    "guidance": "Display the light front at head time.\nTip: The trajectories can appear of jump ahead of the light front\nbecause their time range overlaps the viewer's time range.  To\naverage out this discrete time effect, advance the light front by\nhalf the trajectories interval. E.g., if the trajectory time slice\ninterval is 0.01 ns:\n  /vis/ogl/set/displayLightFront true -90 0 0 mm -0.005 ns\nTo prevent them beating the light front at all:\n  /vis/ogl/set/displayLightFront true -90 0 0 mm -0.01 ns",
                    "params": [
                        {
                            "default": "0",
                            "name": "displayLightFront",
                            "omit": "False",
                            "type": "b"
                        },
                        {
                            "default": "0",
                            "name": "originX",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "originY",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "originZ",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "space_unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "originT",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "s",
                            "name": "time_unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "red",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "displayListLimit": {
                    "guidance": "Set/reset display list limit (to avoid memory exhaustion).\nRange of parameters : limit>=10000",
                    "params": [
                        {
                            "default": "50000",
                            "name": "limit",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                },
                "endTime": {
                    "guidance": "Set end and range of track time.",
                    "params": [
                        {
                            "default": "1.79769e+308",
                            "name": "end-time",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "ns",
                            "name": "end-time-unit",
                            "omit": "False",
                            "type": "s"
                        },
                        {
                            "default": "-1",
                            "name": "time-range",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "ns",
                            "name": "time-range-unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "eventsDrawInterval": {
                    "guidance": "Set number of events allowed in drawing pipeline - speeds drawing\nBy default, the screen is updated at the end of every event.\nAllowing OpenGL to buffer several events can make a big improvement\nin drawing speed.",
                    "params": [
                        {
                            "default": "1",
                            "name": "interval",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                },
                "exportFormat": {
                    "guidance": "Set export format\nBy default, pdf/eps/svg/ps are available. Depending of viewers several other format are available.\nTry /vis/ogl/set/exportFormat without parameters to see them.\nChanging format will reset the incremental suffix to 0.",
                    "params": [
                        {
                            "name": "format",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "fade": {
                    "guidance": "0: no fade; 1: maximum fade with time within range.\nRange of parameters : fadefactor>=0.&&fadefactor<=1.",
                    "params": [
                        {
                            "default": "0",
                            "name": "fadefactor",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "printFilename": {
                    "guidance": "Set print filename\nSetting 'incremental' will increment filename by one at each new print, starting at 0",
                    "params": [
                        {
                            "default": "G4OpenGL",
                            "name": "name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "incremental",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "printMode": {
                    "guidance": "Set print mode, only available for \"ps\" format",
                    "params": [
                        {
                            "default": "vectored",
                            "name": "print_mode",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "printSize": {
                    "guidance": "Set print size\nTip : -1 will mean 'print size' = 'window size'\nSetting size greatter than your maximum graphic card capacity , will set the size to maximum  size.",
                    "params": [
                        {
                            "default": "-1",
                            "name": "width",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "-1",
                            "name": "height",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "startTime": {
                    "guidance": "Set start and range of track time.",
                    "params": [
                        {
                            "default": "-1.79769e+308",
                            "name": "start-time",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "ns",
                            "name": "start-time-unit",
                            "omit": "False",
                            "type": "s"
                        },
                        {
                            "default": "-1",
                            "name": "time-range",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "ns",
                            "name": "time-range-unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "transparency": {
                    "guidance": "True/false to enable/disable rendering of transparent objects.",
                    "params": [
                        {
                            "default": "1",
                            "name": "transparency-enabled",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                }
            }
        },
        "open": {
            "guidance": "Creates a scene handler ready for drawing.\nThe scene handler becomes current (the name is auto-generated).",
            "params": [
                {
                    "name": "graphics-system-name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "600",
                    "name": "window-size-hint",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "reviewKeptEvents": {
            "guidance": "Review kept events.\nIf a macro file is specified, it is executed for each event.\nIf a macro file is not specified, each event is drawn to the current\nviewer.  After each event, the session is paused.  The user may issue\nany allowed command.  Then enter \"cont[inue]\" to continue to the next\nevent.\nUseful commands might be:\n  \"/vis/viewer/...\" to change the view (zoom, set/viewpoint,...).\n  \"/vis/oglx/printEPS\" to get hard copy.\n  \"/vis/open\" to get alternative viewer.\n  \"/vis/abortReviewKeptEvents\", then \"cont[inue]\", to abort.",
            "params": [
                {
                    "name": "macro-file-name",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "scene": {
            "add": {
                "arrow": {
                    "guidance": "Adds arrow to current scene.",
                    "params": [
                        {
                            "name": "x1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "z1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "x2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "z2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "arrow2D": {
                    "guidance": "Adds 2D arrow to current scene.",
                    "params": [
                        {
                            "name": "x1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "x2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y2",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "axes": {
                    "guidance": "Add axes.\nDraws axes at (x0, y0, z0) of given length and colour.\nIf \"unitcolour\" is \"auto\", x, y and z will be red, green and blue\n  respectively.  Otherwise choose from the pre-defined text-specified\n  colours - see information printed by the vis manager at start-up or\n  use \"/vis/list\".\nIf \"length\" is negative, it is set to about 25% of scene extent.\nIf \"showtext\" is false, annotations are suppressed.",
                    "params": [
                        {
                            "default": "0",
                            "name": "x0",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y0",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z0",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "-1",
                            "name": "length",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "auto",
                            "name": "unitcolour",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "true",
                            "name": "showtext",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "date": {
                    "guidance": "Adds date to current scene.\nIf \"date\"is omitted, the current date and time is drawn.\nOtherwise, the string, including the rest of the line, is drawn.",
                    "params": [
                        {
                            "default": "18",
                            "name": "size",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "0.95",
                            "name": "x-position",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0.9",
                            "name": "y-position",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "right",
                            "name": "layout",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "-",
                            "name": "date",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "digis": {
                    "guidance": "Adds digis to current scene.\nDigis are drawn at end of event when the scene in which\nthey are added is current.",
                    "params": []
                },
                "eventID": {
                    "guidance": "Adds eventID to current scene.\nRun and event numbers are drawn at end of event or run when\n the scene in which they are added is current.",
                    "params": [
                        {
                            "default": "18",
                            "name": "size",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "-0.95",
                            "name": "x-position",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0.9",
                            "name": "y-position",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "left",
                            "name": "layout",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "extent": {
                    "guidance": "Adds a dummy model with given extent to the current scene.\nRequires the limits: xmin, xmax, ymin, ymax, zmin, zmax unit.\nThis can be used to provide an extent to the scene even if\nno other models with extent are available. For example,\neven if there is no geometry.  In that case, for example:\n  /vis/open OGL\n  /vis/scene/create\n  /vis/scene/add/extent -300 300 -300 300 -300 300 cm\n  /vis/sceneHandler/attach",
                    "params": [
                        {
                            "default": "0",
                            "name": "xmin",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "xmax",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "ymin",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "ymax",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "zmin",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "zmax",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "frame": {
                    "guidance": "Adds frame to current scene.",
                    "params": [
                        {
                            "default": "0.97",
                            "name": "size",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "hits": {
                    "guidance": "Adds hits to current scene.\nHits are drawn at end of event when the scene in which\nthey are added is current.",
                    "params": []
                },
                "line": {
                    "guidance": "Adds line to current scene.",
                    "params": [
                        {
                            "name": "x1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "z1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "x2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "z2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "line2D": {
                    "guidance": "Adds 2D line to current scene.",
                    "params": [
                        {
                            "name": "x1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y1",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "x2",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y2",
                            "omit": "False",
                            "type": "d"
                        }
                    ]
                },
                "logicalVolume": {
                    "guidance": "Adds a logical volume to the current scene,\nShows boolean components (if any), voxels (if any) and readout geometry\n(if any).  Note: voxels are not constructed until start of run -\n \"/run/beamOn\".  (For voxels without a run, \"/run/beamOn 0\".)",
                    "params": [
                        {
                            "name": "logical-volume-name",
                            "omit": "False",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "depth-of-descent",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "1",
                            "name": "booleans-flag",
                            "omit": "True",
                            "type": "b"
                        },
                        {
                            "default": "1",
                            "name": "voxels-flag",
                            "omit": "True",
                            "type": "b"
                        },
                        {
                            "default": "1",
                            "name": "readout-flag",
                            "omit": "True",
                            "type": "b"
                        },
                        {
                            "default": "1",
                            "name": "axes-flag",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "logo": {
                    "guidance": "Adds a G4 logo to the current scene.\nIf \"unit\" is \"auto\", height is roughly one tenth of scene extent.\n\"direction\" is that of outward-facing normal to front face of logo.\nIf \"direction\" is \"auto\", logo faces the user in the current viewer.\nIf \"placement\" is \"auto\", logo is placed at bottom right of screen\n  when viewed from logo direction.",
                    "params": [
                        {
                            "default": "1",
                            "name": "height",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "auto",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "auto",
                            "name": "direction",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "red",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "auto",
                            "name": "placement",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "xmid",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "ymid",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "zmid",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "logo2D": {
                    "guidance": "Adds 2D logo to current scene.",
                    "params": [
                        {
                            "default": "48",
                            "name": "size",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "-0.9",
                            "name": "x-position",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "-0.9",
                            "name": "y-position",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "left",
                            "name": "layout",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "magneticField": {
                    "guidance": "Adds magnetic field representation to current scene.\nThe first parameter is no. of data points per half scene.  So, possibly, at\nmaximum, the number of data points sampled is (2*n+1)^3, which can grow\nlarge--be warned!\nYou might find that your scene is cluttered by thousands of arrows for\nthe default number of data points, so try reducing to 2 or 3, e.g:\n  /vis/scene/add/magneticField 3\nor, if only a small part of the scene has a field:\n  /vis/scene/add/magneticField 50 # or more\nIn the arrow representation, the length of the arrow is proportional\nto the magnitude of the field and the colour is mapped onto the range\nas a fraction of the maximum magnitude: 0->0.5->1 is blue->green->red.",
                    "params": [
                        {
                            "default": "10",
                            "name": "nDataPointsPerHalfScene",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "fullArrow",
                            "name": "representation",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "psHits": {
                    "guidance": "Adds Primitive Scorer Hits (PSHits) to current scene.\nPSHits are drawn at end of run when the scene in which\nthey are added is current.\nOptional parameter specifies name of scoring map.  By default all\nscoring maps registered with the G4ScoringManager are drawn.",
                    "params": [
                        {
                            "default": "all",
                            "name": "mapname",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "scale": {
                    "guidance": "Adds an annotated scale line to the current scene.\nIf \"unit\" is \"auto\", length is roughly one tenth of the scene extent.\nIf \"direction\" is \"auto\", scale is roughly in the plane of the current view.\nIf \"placement\" is \"auto\", scale is placed at bottom left of current view.\n  Otherwise placed at (xmid,ymid,zmid).\nAn annotated line in the specified direction with tick marks at the\nend.  If autoPlacing is true it is required to be centred at the\nfront, right, bottom corner of the world space, comfortably outside\nthe existing bounding box/sphere so that existing objects do not\nobscure it.  Otherwise it is required to be drawn with mid-point at\n(xmid, ymid, zmid).\n\nThe auto placing algorithm might be:\n  x = xmin + (1 + comfort) * (xmax - xmin);\n  y = ymin - comfort * (ymax - ymin);\n  z = zmin + (1 + comfort) * (zmax - zmin);\n  if direction == x then (x - length,y,z) to (x,y,z);\n  if direction == y then (x,y,z) to (x,y + length,z);\n  if direction == z then (x,y,z - length) to (x,y,z);",
                    "params": [
                        {
                            "default": "1",
                            "name": "length",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "auto",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "auto",
                            "name": "direction",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "red",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "auto",
                            "name": "placement",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "xmid",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "ymid",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "zmid",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "text": {
                    "guidance": "Adds text to current scene.\nUse \"/vis/set/textColour\" to set colour.\nUse \"/vis/set/textLayout\" to set layout:",
                    "params": [
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "12",
                            "name": "font_size",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "x_offset",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y_offset",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "Hello G4",
                            "name": "text",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "text2D": {
                    "guidance": "Adds 2D text to current scene.\nUse \"/vis/set/textColour\" to set colour.\nUse \"/vis/set/textLayout\" to set layout:",
                    "params": [
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "12",
                            "name": "font_size",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "x_offset",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y_offset",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "Hello G4",
                            "name": "text",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "trajectories": {
                    "guidance": "Adds trajectories to current scene.\nCauses trajectories, if any, to be drawn at the end of processing an\nevent.  Switches on trajectory storing and sets the\ndefault trajectory type.\nThe command line parameter list determines the default trajectory type.\nIf it contains the string \"smooth\", auxiliary inter-step points will\nbe inserted to improve the smoothness of the drawing of a curved\ntrajectory.\nIf it contains the string \"rich\", significant extra information will\nbe stored in the trajectory (G4RichTrajectory) amenable to modeling\nand filtering with \"/vis/modeling/trajectories/create/drawByAttribute\"\nand \"/vis/filtering/trajectories/create/attributeFilter\" commands.\nIt may contain both strings in any order.\nTo switch off trajectory storing: \"/tracking/storeTrajectory 0\".\nSee also \"/vis/scene/endOfEventAction\".\nNote:  This only sets the default.  Independently of the result of this\ncommand, a user may instantiate a trajectory that overrides this default\nin PreUserTrackingAction.",
                    "params": [
                        {
                            "name": "default-trajectory-type",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "userAction": {
                    "guidance": "Add named Vis User Action to current scene.\nAttempts to match search string to name of action - use unique sub-string.\n(Use /vis/list to see names of registered actions.)\nIf name == \"all\" (default), all actions are added.",
                    "params": [
                        {
                            "default": "all",
                            "name": "action-name",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "volume": {
                    "guidance": "Adds a physical volume to current scene, with optional clipping volume.\nIf physical-volume-name is \"world\" (the default), the top of the\nmain geometry tree (material world) is added.  If \"worlds\", the\ntop of all worlds - material world and parallel worlds, if any - are\nadded.  Otherwise a search of all worlds is made, taking the first\nmatching occurence only.  To see a representation of the geometry\nhierarchy of the worlds, try \"/vis/drawTree [worlds]\" or one of the\ndriver/browser combinations that have the required functionality, e.g., HepRep.\nIf clip-volume-type is specified, the subsequent parameters are used to\nto define a clipping volume.  For example,\n\"/vis/scene/add/volume ! ! ! -box km 0 1 0 1 0 1\" will draw the world\nwith the positive octant cut away.  (If the Boolean Processor issues\nwarnings try replacing 0 by 0.000000001 or something.)\nIf clip-volume-type is prepended with '-', the clip-volume is subtracted\n(cutaway). (This is the default if there is no prepended character.)\nIf '*' is prepended, the intersection of the physical-volume and the\nclip-volume is made. (You can make a section/DCUT with a thin box, for\nexample).\nFor \"box\", the parameters are xmin,xmax,ymin,ymax,zmin,zmax.\nOnly \"box\" is programmed at present.",
                    "params": [
                        {
                            "default": "world",
                            "name": "physical-volume-name",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "-1",
                            "name": "copy-no",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "-1",
                            "name": "depth-of-descent",
                            "omit": "True",
                            "type": "i"
                        },
                        {
                            "default": "none",
                            "name": "clip-volume-type",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "m",
                            "name": "parameter-unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "parameter-1",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "parameter-2",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "parameter-3",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "parameter-4",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "parameter-5",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "parameter-6",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                }
            }
        },
        "specify": {
            "guidance": "Draws logical volume with Boolean components, voxels and readout geometry.\nCreates a scene consisting of this logical volume and asks the\n  current viewer to draw it to the specified depth of descent\n  showing boolean components (if any), voxels (if any)\n  and readout geometry (if any), under control of the appropriate flag.\nNote: voxels are not constructed until start of run - /run/beamOn.\nThe scene becomes current.",
            "params": [
                {
                    "name": "logical-volume-name",
                    "omit": "False",
                    "type": "s"
                },
                {
                    "default": "1",
                    "name": "depth-of-descent",
                    "omit": "True",
                    "type": "i"
                },
                {
                    "default": "1",
                    "name": "booleans-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "voxels-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "readout-flag",
                    "omit": "True",
                    "type": "b"
                },
                {
                    "default": "1",
                    "name": "axes-flag",
                    "omit": "True",
                    "type": "b"
                }
            ]
        },
        "touchable": {
            "set": {
                "colour": {
                    "guidance": "Set colour of current touchable.\nUse \"/vis/set/touchable\" to set current touchable.\nIf \"red\" is a string understood by the vis system it will be taken.\n  Otherwise the values of\ned\", \"green\", etc., are used.",
                    "params": [
                        {
                            "default": "1.",
                            "name": "red",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "daughtersInvisible": {
                    "guidance": "Daughters of current touchable invisible: true/false.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "daughtersInvisible",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceAuxEdgeVisible": {
                    "guidance": "Force auxiliary (soft) edges of current touchable to be visible: true/false.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "forceAuxEdgeVisible",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceSolid": {
                    "guidance": "Force current touchable always to be drawn solid (surface drawing).\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "forceSolid",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "forceWireframe": {
                    "guidance": "Force current touchable always to be drawn as wireframe.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "forceWireframe",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "lineSegmentsPerCircle": {
                    "guidance": "For current touchable, set number of line segments per circle, the\nprecision with which a curved line or surface is represented by a\npolygon or polyhedron, regardless of the view parameters.\nNegative to pick up G4Polyhedron default value.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "-1",
                            "name": "lineSegmentsPerCircle",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                },
                "lineStyle": {
                    "guidance": "Set line style of current touchable drawing.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "unbroken",
                            "name": "lineStyle",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "lineWidth": {
                    "guidance": "Set line width of current touchable.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "1",
                            "name": "lineWidth",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "visibility": {
                    "guidance": "Set visibility of current touchable: true/false.\nUse \"/vis/set/touchable\" to set current touchable.",
                    "params": [
                        {
                            "default": "0",
                            "name": "visibility",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                }
            }
        },
        "verbose": {
            "guidance": "Simple graded message scheme - digit or string (1st character defines):\n0) quiet,          Nothing is printed.\n1) startup,        Startup and endup messages are printed...\n2) errors,         ...and errors...\n3) warnings,       ...and warnings...\n4) confirmations,  ...and confirming messages...\n5) parameters,     ...and parameters of scenes and views...\n6) all             ...and everything available.",
            "params": [
                {
                    "default": "warnings",
                    "name": "verbosity",
                    "omit": "True",
                    "type": "s"
                }
            ]
        },
        "viewer": {
            "default": {
                "hiddenEdge": {
                    "guidance": "Default hiddenEdge drawing for future viewers.\nEdges become hidden/seen in wireframe or surface mode.",
                    "params": [
                        {
                            "default": "1",
                            "name": "hidden-edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "style": {
                    "guidance": "Default drawing style for future viewers.\nSet style of drawing - w[ireframe] or s[urface].\n(Default hidden line drawing is controlled by \"/vis/viewer/default/hiddenEdge\".)",
                    "params": [
                        {
                            "name": "style",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                }
            },
            "set": {
                "all": {
                    "guidance": "Copies view parameters.\nCopies view parameters (except the autoRefresh status) from\nfrom-viewer to current viewer.",
                    "params": [
                        {
                            "name": "from-viewer-name",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "autoRefresh": {
                    "guidance": "Sets auto-refresh.\nIf true, view is automatically refreshed after a change of\nview parameters.",
                    "params": [
                        {
                            "default": "1",
                            "name": "auto-refresh",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "auxiliaryEdge": {
                    "guidance": "Sets visibility of auxiliary edges\nAuxiliary edges, i.e., those that are part of a curved surface,\nsometimes called soft edges, become visible/invisible.",
                    "params": [
                        {
                            "default": "1",
                            "name": "edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "background": {
                    "guidance": "Set background colour and transparency (default black and opaque).\nAccepts (a) RGB triplet. e.g., \".3 .4 .5\", or\n(b) string such as \"white\", \"black\", \"grey\", \"red\"...\n(c) an additional number for opacity, e.g., \".3 .4 .5 .6\"\n    or \"grey ! ! .6\" (note \"!\"'s for unused green and blue parameters),\n    e.g. \"! ! ! 0.\" for a transparent background.",
                    "params": [
                        {
                            "default": "0.",
                            "name": "red_or_string",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "0",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "culling": {
                    "guidance": "Set culling options.\n\"global\": enables/disables all other culling options.\n\"coveredDaughters\": culls, i.e., eliminates, volumes that would not\nbe seen because covered by ancester volumes in surface drawing mode,\nand then only if the ancesters are visible and opaque, and then only\nif no sections or cutaways are in operation.  Intended solely to\nimprove the speed of rendering visible volumes.\n\"invisible\": culls objects with the invisible attribute set.\n\"density\": culls volumes with density lower than threshold.  Useful\nfor eliminating \"container volumes\" with no physical correspondence,\nwhose material is usually air.  If this is selected, provide threshold\ndensity and unit (g/cm3 mg/cm3 or kg/m3).",
                    "params": [
                        {
                            "name": "culling-option",
                            "omit": "False",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "action",
                            "omit": "True",
                            "type": "b"
                        },
                        {
                            "default": "0.01",
                            "name": "density-threshold",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "g/cm3",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "cutawayMode": {
                    "guidance": "Sets cutaway mode - add (union) or multiply (intersection).",
                    "params": [
                        {
                            "default": "union",
                            "name": "cutaway-mode",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "defaultColour": {
                    "guidance": "Set defaultColour colour and transparency (default white and opaque).\nAccepts (a) RGB triplet. e.g., \".3 .4 .5\", or\n(b) string such as \"white\", \"black\", \"grey\", \"red\"...\n(c) an additional number for opacity, e.g., \".3 .4 .5 .6\"\n    or \"grey ! ! .6\" (note \"!\"'s for unused green and blue parameters),\n    e.g. \"! ! ! 0.\" for a transparent colour.",
                    "params": [
                        {
                            "default": "1.",
                            "name": "red_or_string",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "defaultTextColour": {
                    "guidance": "Set defaultTextColour colour and transparency (default white and opaque).\nAccepts (a) RGB triplet. e.g., \".3 .4 .5\", or\n(b) string such as \"white\", \"black\", \"grey\", \"red\"...\n(c) an additional number for opacity, e.g., \".3 .4 .5 .6\"\n    or \"grey ! ! .6\" (note \"!\"'s for unused green and blue parameters),\n    e.g. \"! ! ! 0.\" for a transparent colour.",
                    "params": [
                        {
                            "default": "1.",
                            "name": "red_or_string",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "green",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "blue",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "opacity",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "edge": {
                    "guidance": "Edges become visible/invisible in surface mode.",
                    "params": [
                        {
                            "default": "1",
                            "name": "edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "explodeFactor": {
                    "guidance": "Moves top-level drawn volumes by this factor from this centre.",
                    "params": [
                        {
                            "default": "1",
                            "name": "explodeFactor",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "globalLineWidthScale": {
                    "guidance": "Multiplies line widths by this factor.",
                    "params": [
                        {
                            "default": "1",
                            "name": "scale-factor",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "globalMarkerScale": {
                    "guidance": "Multiplies marker sizes by this factor.",
                    "params": [
                        {
                            "default": "1",
                            "name": "scale-factor",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "hiddenEdge": {
                    "guidance": "Edges become hidden/seen in wireframe or surface mode.",
                    "params": [
                        {
                            "default": "1",
                            "name": "hidden-edge",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "hiddenMarker": {
                    "guidance": "If true, closer objects hide markers. Otherwise, markers always show.",
                    "params": [
                        {
                            "default": "1",
                            "name": "hidden-marker",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "lightsMove": {
                    "guidance": "Lights move with camera or with object",
                    "params": [
                        {
                            "name": "lightsMove",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "lightsThetaPhi": {
                    "guidance": "Set direction from target to lights.",
                    "params": [
                        {
                            "default": "60",
                            "name": "theta",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "45",
                            "name": "phi",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "lightsVector": {
                    "guidance": "Set direction from target to lights.",
                    "params": [
                        {
                            "default": "1",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "lineSegmentsPerCircle": {
                    "guidance": "Set number of sides per circle for polygon/polyhedron drawing.\nRefers to graphical representation of objects with curved lines/surfaces.",
                    "params": [
                        {
                            "default": "24",
                            "name": "line-segments",
                            "omit": "True",
                            "type": "i"
                        }
                    ]
                },
                "picking": {
                    "guidance": "Sets picking, if available.\nIf true, view is set up for picking, if available.\nYou may need to issue \"/vis/viewer/update\".\nFor required actions, watch for instructions for viewer.",
                    "params": [
                        {
                            "default": "1",
                            "name": "picking",
                            "omit": "True",
                            "type": "b"
                        }
                    ]
                },
                "projection": {
                    "guidance": "Set projection style - o[rthogonal] or p[erspective].\nIf p[erspective], also set field half angle.",
                    "params": [
                        {
                            "default": "orthogonal",
                            "name": "projection",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "30",
                            "name": "field-half-angle",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "rotationStyle": {
                    "guidance": "Set style of rotation - constrainUpDirection or freeRotation.\nconstrainUpDirection: conventional HEP view.\nfreeRotation: Google-like rotation, using mouse-grab.",
                    "params": [
                        {
                            "name": "style",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "sectionPlane": {
                    "guidance": "Set plane for drawing section (DCUT).\nE.g., for a y-z plane at x = 1 cm:\n\"/vis/viewer/set/sectionPlane on 1 0 0 cm 1 0 0\".\nTo turn off: /vis/viewer/set/sectionPlane off",
                    "params": [
                        {
                            "default": "on",
                            "name": "Selector",
                            "omit": "True",
                            "type": "c"
                        },
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "m",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        },
                        {
                            "default": "1",
                            "name": "nx",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "ny",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "nz",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "style": {
                    "guidance": "Set style of drawing - w[ireframe] or s[urface].\n(Hidden line drawing is controlled by \"/vis/viewer/set/hiddenEdge\".)",
                    "params": [
                        {
                            "name": "style",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "targetPoint": {
                    "guidance": "Set target point.\nThis sets the \"Current Target Point\" relative to the \"Standard\nTarget Point\" so that the actual target point is as requested.\n(See G4ViewParameters.hh for an explanation of target points.)",
                    "params": [
                        {
                            "name": "x",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "y",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "z",
                            "omit": "False",
                            "type": "d"
                        },
                        {
                            "name": "Unit",
                            "omit": "False",
                            "type": "s"
                        }
                    ]
                },
                "upThetaPhi": {
                    "guidance": "Set up vector.\nViewer will attempt always to show this direction upwards.",
                    "params": [
                        {
                            "default": "90",
                            "name": "theta",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "90",
                            "name": "phi",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "upVector": {
                    "guidance": "Set up vector.\nViewer will attempt always to show this direction upwards.",
                    "params": [
                        {
                            "default": "0",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "0",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                },
                "viewpointThetaPhi": {
                    "guidance": "Set direction from target to camera.\nAlso changes lightpoint direction if lights are set to move with camera.",
                    "params": [
                        {
                            "default": "60",
                            "name": "theta",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "45",
                            "name": "phi",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "deg",
                            "name": "unit",
                            "omit": "True",
                            "type": "s"
                        }
                    ]
                },
                "viewpointVector": {
                    "guidance": "Set direction from target to camera.\nAlso changes lightpoint direction if lights are set to move with camera.",
                    "params": [
                        {
                            "default": "1",
                            "name": "x",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "y",
                            "omit": "True",
                            "type": "d"
                        },
                        {
                            "default": "1",
                            "name": "z",
                            "omit": "True",
                            "type": "d"
                        }
                    ]
                }
            }
        }
    }
}